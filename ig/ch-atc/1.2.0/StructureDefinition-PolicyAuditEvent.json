{
  "resourceType": "StructureDefinition",
  "id": "PolicyAuditEvent",
  "text": {
    "status": "additional",
    "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n\tStructureDefinition for the PolicyAuditEvent.\n\t\t</div>"
  },
  "url": "http://fhir.ch/ig/ch-atc/StructureDefinition/PolicyAuditEvent",
  "version": "1.2.0",
  "name": "PolicyAuditEvent",
  "title": "PolicyAuditEvent",
  "status": "active",
  "experimental": false,
  "date": "2018-05-28T00:00:00+02:00",
  "publisher": "Federal Office of Public Health (FOPH)",
  "contact": [
    {
      "name": "FOPH",
      "telecom": [
        {
          "system": "url",
          "value": "https://www.bag.admin.ch/bag/en/home.html"
        }
      ]
    },
    {
      "name": "Oliver Egger",
      "telecom": [
        {
          "system": "email",
          "value": "oliver.egger@ahdis.ch"
        }
      ]
    }
  ],
  "description": "This profile defines the content of the policy audit events which a community has to provide for a patients audit trail. ",
  "jurisdiction": [
    {
      "coding": [
        {
          "system": "urn:iso:std:iso:3166",
          "code": "CH"
        }
      ]
    }
  ],
  "copyright": "CC-BY-SA-4.0",
  "fhirVersion": "3.0.1",
  "mapping": [
    {
      "identity": "ch-atc",
      "uri": "https://www.bag.admin.ch/bag/en/home.html",
      "name": "Mapping to CH:ATC"
    },
    {
      "identity": "dicom",
      "uri": "http://nema.org/dicom",
      "name": "DICOM Tag Mapping"
    },
    {
      "identity": "rim",
      "uri": "http://hl7.org/v3",
      "name": "RIM Mapping"
    },
    {
      "identity": "w5",
      "uri": "http://hl7.org/fhir/w5",
      "name": "W5 Mapping"
    },
    {
      "identity": "w3c.prov",
      "uri": "http://www.w3.org/ns/prov",
      "name": "W3C PROV"
    },
    {
      "identity": "fhirprovenance",
      "uri": "http://hl7.org/fhir/provenance",
      "name": "FHIR Provenance"
    }
  ],
  "kind": "resource",
  "abstract": false,
  "type": "AuditEvent",
  "baseDefinition": "http://hl7.org/fhir/StructureDefinition/AuditEvent",
  "derivation": "constraint",
  "snapshot": {
    "element": [
      {
        "id": "AuditEvent",
        "path": "AuditEvent",
        "short": "Policy Audit Trail Content Profile",
        "definition": "Policy Audit Trail Content Profil",
        "comment": "Based on ATNA (RFC 3881).",
        "min": 0,
        "max": "*",
        "base": {
          "path": "AuditEvent",
          "min": 0,
          "max": "*"
        },
        "constraint": [
          {
            "key": "dom-2",
            "severity": "error",
            "human": "If the resource is contained in another resource, it SHALL NOT contain nested Resources",
            "expression": "contained.contained.empty()",
            "xpath": "not(parent::f:contained and f:contained)",
            "source": "DomainResource"
          },
          {
            "key": "dom-1",
            "severity": "error",
            "human": "If the resource is contained in another resource, it SHALL NOT contain any narrative",
            "expression": "contained.text.empty()",
            "xpath": "not(parent::f:contained and f:text)",
            "source": "DomainResource"
          },
          {
            "key": "dom-4",
            "severity": "error",
            "human": "If a resource is contained in another resource, it SHALL NOT have a meta.versionId or a meta.lastUpdated",
            "expression": "contained.meta.versionId.empty() and contained.meta.lastUpdated.empty()",
            "xpath": "not(exists(f:contained/*/f:meta/f:versionId)) and not(exists(f:contained/*/f:meta/f:lastUpdated))",
            "source": "DomainResource"
          },
          {
            "key": "dom-3",
            "severity": "error",
            "human": "If the resource is contained in another resource, it SHALL be referred to from elsewhere in the resource",
            "expression": "contained.where(('#'+id in %resource.descendants().reference).not()).empty()",
            "xpath": "not(exists(for $id in f:contained/*/@id return $id[not(ancestor::f:contained/parent::*/descendant::f:reference/@value=concat('#', $id))]))",
            "source": "DomainResource"
          },
          {
            "key": "ch-atc-pae-1",
            "severity": "error",
            "human": "subtype needs to be fixed to ValueSet PolicyAuditEventType",
            "expression": "subtype.exists() and subtype.count()=1 and subtype[0].code.startsWith('ATC_POL')"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "Entity. Role, or Act"
          },
          {
            "identity": "rim",
            "map": "ControlAct[moodCode=EVN]"
          },
          {
            "identity": "dicom",
            "map": "Message"
          },
          {
            "identity": "w5",
            "map": "infrastructure.information"
          }
        ]
      },
      {
        "id": "AuditEvent.id",
        "path": "AuditEvent.id",
        "short": "Logical id of this artifact",
        "definition": "The logical id of the resource, as used in the URL for the resource. Once assigned, this        value never changes.",
        "comment": "The only time that a resource does not have an id is when it is being submitted to the        server using a create operation.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Resource.id",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "isSummary": true
      },
      {
        "id": "AuditEvent.meta",
        "path": "AuditEvent.meta",
        "short": "Metadata about the resource",
        "definition": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content may not always be associated with version changes to the resource.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Resource.meta",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Meta"
          }
        ],
        "isSummary": true
      },
      {
        "id": "AuditEvent.implicitRules",
        "path": "AuditEvent.implicitRules",
        "short": "A set of rules under which this content was created",
        "definition": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content.",
        "comment": "Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. \n\nThis element is labelled as a modifier because the implicit rules may provide additional knowledge about the resource that modifies it's meaning or interpretation.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Resource.implicitRules",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "uri"
          }
        ],
        "isModifier": true,
        "isSummary": true
      },
      {
        "id": "AuditEvent.language",
        "path": "AuditEvent.language",
        "short": "Language of the resource content",
        "definition": "The base language in which the resource is written.",
        "comment": "Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource  Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Resource.language",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "binding": {
          "extension": [
            {
              "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-maxValueSet",
              "valueReference": {
                "reference": "http://hl7.org/fhir/ValueSet/all-languages"
              }
            },
            {
              "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
              "valueString": "Language"
            },
            {
              "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
              "valueBoolean": true
            }
          ],
          "strength": "extensible",
          "description": "A human language.",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/languages"
          }
        }
      },
      {
        "id": "AuditEvent.text",
        "path": "AuditEvent.text",
        "short": "A human-readable narrative that contains the summary of the Audit Event.",
        "definition": "A human-readable narrative that contains the summary of the Audit Event.",
        "comment": "Contained resources do not have narrative. Resources that are not contained SHOULD have a narrative. In some cases, a resource may only have text with little or no additional discrete data (as long as all minOccurs=1 elements are satisfied).  This may be necessary for data from legacy systems where information is captured as a \"text blob\" or where text is additionally entered raw or narrated and encoded in formation is added later.",
        "alias": [
          "narrative",
          "html",
          "xhtml",
          "display"
        ],
        "min": 1,
        "max": "1",
        "base": {
          "path": "DomainResource.text",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Narrative"
          }
        ],
        "condition": [
          "dom-1"
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "Act.text?"
          }
        ]
      },
      {
        "id": "AuditEvent.contained",
        "path": "AuditEvent.contained",
        "short": "Contained, inline Resources",
        "definition": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
        "comment": "This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again.",
        "alias": [
          "inline resources",
          "anonymous resources",
          "contained resources"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "DomainResource.contained",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Resource"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "id": "AuditEvent.extension",
        "path": "AuditEvent.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the resource. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "DomainResource.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "id": "AuditEvent.modifierExtension",
        "path": "AuditEvent.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "definition": "May be used to represent additional information that is not part of the basic definition of the resource, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "DomainResource.modifierExtension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isModifier": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "id": "AuditEvent.type",
        "path": "AuditEvent.type",
        "short": "Type/identifier of event",
        "definition": "Identifier for a family of the event.  For example, a menu item, program, rule, policy,        function code, application name or URL. It identifies the performed function.",
        "requirements": "This identifies the performed function. For \"Execute\" Event Action Code audit        records, this identifies the application function performed.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "AuditEvent.type",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "Coding"
          }
        ],
        "isSummary": true,
        "binding": {
          "extension": [
            {
              "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
              "valueString": "AuditEventType"
            }
          ],
          "strength": "extensible",
          "description": "Type of event.",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/audit-event-type"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": ".code (type, subtype and action are pre-coordinated or sent as translations)"
          },
          {
            "identity": "dicom",
            "map": "EventId"
          },
          {
            "identity": "w3c.prov",
            "map": "Activity"
          },
          {
            "identity": "w5",
            "map": "what"
          }
        ]
      },
      {
        "id": "AuditEvent.subtype",
        "path": "AuditEvent.subtype",
        "slicing": {
          "discriminator": [
            {
              "type": "value",
              "path": "system"
            }
          ],
          "rules": "open"
        },
        "short": "More specific type/id for the event",
        "definition": "Identifier for the category of event.",
        "requirements": "This field enables queries of messages by implementation-defined event categories.",
        "min": 1,
        "max": "*",
        "base": {
          "path": "AuditEvent.subtype",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Coding"
          }
        ],
        "isSummary": true,
        "binding": {
          "extension": [
            {
              "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
              "valueString": "AuditEventSubType"
            }
          ],
          "strength": "extensible",
          "description": "Sub-type of event.",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/audit-event-sub-type"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": ".code (type, subtype and action are pre-coordinated or sent as translations)"
          },
          {
            "identity": "dicom",
            "map": "EventTypeCode"
          },
          {
            "identity": "w5",
            "map": "what"
          }
        ]
      },
      {
        "id": "AuditEvent.subtype:PolicyAuditEventType",
        "path": "AuditEvent.subtype",
        "sliceName": "PolicyAuditEventType",
        "short": "PolicyAuditEventType",
        "definition": "Identifier for the category of event.",
        "requirements": "This field enables queries of messages by implementation-defined event categories.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "AuditEvent.subtype",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Coding"
          }
        ],
        "isSummary": true,
        "binding": {
          "extension": [
            {
              "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
              "valueString": "ConditionKind"
            }
          ],
          "strength": "required",
          "description": "Policy Audit Event Type",
          "valueSetReference": {
            "reference": "http://fhir.ch/ig/ch-atc/ValueSet/PolicyAuditEventType"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": ".code (type, subtype and action are pre-coordinated or sent as translations)"
          },
          {
            "identity": "dicom",
            "map": "EventTypeCode"
          },
          {
            "identity": "w5",
            "map": "what"
          },
          {
            "identity": "ch-atc",
            "map": "Event Type"
          }
        ]
      },
      {
        "id": "AuditEvent.subtype:PolicyAuditEventType.id",
        "path": "AuditEvent.subtype.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "AuditEvent.subtype:PolicyAuditEventType.extension",
        "path": "AuditEvent.subtype.extension",
        "slicing": {
          "discriminator": [
            {
              "type": "value",
              "path": "url"
            }
          ],
          "description": "Extensions are always sliced by (at least) url",
          "rules": "open"
        },
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "AuditEvent.subtype:PolicyAuditEventType.system",
        "path": "AuditEvent.subtype.system",
        "short": "Identity of the terminology system",
        "definition": "The identification of the code system that defines the meaning of the symbol in the code.",
        "comment": "The URI may be an OID (urn:oid:...) or a UUID (urn:uuid:...).  OIDs and UUIDs SHALL be references to the HL7 OID registry. Otherwise, the URI should come from HL7's list of FHIR defined special URIs or it should de-reference to some definition that establish the system clearly and unambiguously.",
        "requirements": "Need to be unambiguous about the source of the definition of the symbol.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Coding.system",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "uri"
          }
        ],
        "fixedCode": "urn:oid:2.16.756.5.30.1.127.3.10.7",
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "C*E.3"
          },
          {
            "identity": "rim",
            "map": "./codeSystem"
          },
          {
            "identity": "orim",
            "map": "fhir:Coding.system rdfs:subPropertyOf dt:CDCoding.codeSystem"
          }
        ]
      },
      {
        "id": "AuditEvent.subtype:PolicyAuditEventType.version",
        "path": "AuditEvent.subtype.version",
        "short": "Version of the system - if relevant",
        "definition": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured. and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.",
        "comment": "Where the terminology does not clearly define what string should be used to identify code system versions, the recommendation is to use the date (expressed in FHIR date format) on which that version was officially published as the version date.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Coding.version",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "C*E.7"
          },
          {
            "identity": "rim",
            "map": "./codeSystemVersion"
          },
          {
            "identity": "orim",
            "map": "fhir:Coding.version rdfs:subPropertyOf dt:CDCoding.codeSystemVersion"
          }
        ]
      },
      {
        "id": "AuditEvent.subtype:PolicyAuditEventType.code",
        "path": "AuditEvent.subtype.code",
        "short": "Symbol in syntax defined by the system",
        "definition": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
        "requirements": "Need to refer to a particular code in the system.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Coding.code",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "C*E.1"
          },
          {
            "identity": "rim",
            "map": "./code"
          },
          {
            "identity": "orim",
            "map": "fhir:Coding.code rdfs:subPropertyOf dt:CDCoding.code"
          }
        ]
      },
      {
        "id": "AuditEvent.subtype:PolicyAuditEventType.display",
        "extension": [
          {
            "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-translatable",
            "valueBoolean": true
          }
        ],
        "path": "AuditEvent.subtype.display",
        "short": "Representation defined by the system",
        "definition": "A representation of the meaning of the code in the system, following the rules of the system.",
        "requirements": "Need to be able to carry a human-readable meaning of the code for readers that do not know  the system.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Coding.display",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "C*E.2 - but note this is not well followed"
          },
          {
            "identity": "rim",
            "map": "CV.displayName"
          },
          {
            "identity": "orim",
            "map": "fhir:Coding.display rdfs:subPropertyOf dt:CDCoding.displayName"
          }
        ]
      },
      {
        "id": "AuditEvent.subtype:PolicyAuditEventType.userSelected",
        "path": "AuditEvent.subtype.userSelected",
        "short": "If this coding was chosen directly by the user",
        "definition": "Indicates that this coding was chosen by a user directly - i.e. off a pick list of available items (codes or displays).",
        "comment": "Amongst a set of alternatives, a directly chosen code is the most appropriate starting point for new translations. There is some ambiguity about what exactly 'directly chosen' implies, and trading partner agreement may be needed to clarify the use of this element and its consequences more completely.",
        "requirements": "This has been identified as a clinical safety criterium - that this exact system/code pair was chosen explicitly, rather than inferred by the system based on some rules or language processing.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Coding.userSelected",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "boolean"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "Sometimes implied by being first"
          },
          {
            "identity": "rim",
            "map": "CD.codingRationale"
          },
          {
            "identity": "orim",
            "map": "fhir:Coding.userSelected fhir:mapsTo dt:CDCoding.codingRationale. fhir:Coding.userSelected fhir:hasMap fhir:Coding.userSelected.map. fhir:Coding.userSelected.map a fhir:Map;   fhir:target dt:CDCoding.codingRationale. fhir:Coding.userSelected\\#true a [     fhir:source \"true\";     fhir:target dt:CDCoding.codingRationale\\#O   ]"
          }
        ]
      },
      {
        "id": "AuditEvent.action",
        "path": "AuditEvent.action",
        "short": "Type of action performed during the event",
        "definition": "Indicator for type of action performed during the event that generated the audit.",
        "requirements": "This broadly indicates what kind of action was done on the AuditEvent.entity by the AuditEvent.agent.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "AuditEvent.action",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "isSummary": true,
        "binding": {
          "extension": [
            {
              "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
              "valueString": "AuditEventAction"
            }
          ],
          "strength": "required",
          "description": "Indicator for type of action performed during the event that generated the event",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/audit-event-action"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": ".code (type, subtype and action are pre-coordinated or sent as translations)"
          },
          {
            "identity": "dicom",
            "map": "EventActionCode"
          },
          {
            "identity": "w5",
            "map": "what"
          }
        ]
      },
      {
        "id": "AuditEvent.recorded",
        "path": "AuditEvent.recorded",
        "short": "Time when the event was recorded",
        "definition": "The time when the event was recorded.",
        "comment": "In a distributed system, some sort of common time base (e.g. an NTP [RFC1305] server)        is a good implementation tactic.",
        "requirements": "This ties an event to a specific date and time. Security audits typically require a consistent        time base (e.g. UTC), to eliminate time-zone issues arising from geographical distribution.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "AuditEvent.recorded",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "instant"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": ".effectiveTime"
          },
          {
            "identity": "dicom",
            "map": "EventDateTime"
          },
          {
            "identity": "w3c.prov",
            "map": "Activity.when"
          },
          {
            "identity": "fhirprovenance",
            "map": "Provenance.recorded"
          },
          {
            "identity": "w5",
            "map": "when.recorded"
          },
          {
            "identity": "ch-atc",
            "map": "Event Date and Time"
          }
        ]
      },
      {
        "id": "AuditEvent.outcome",
        "path": "AuditEvent.outcome",
        "short": "Whether the event succeeded or failed",
        "definition": "Indicates whether the event succeeded or failed.",
        "comment": "In some cases a \"success\" may be partial, for example, an incomplete or interrupted transfer of a radiological study. For the purpose of establishing accountability, these distinctions are not relevant.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "AuditEvent.outcome",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "isSummary": true,
        "binding": {
          "extension": [
            {
              "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
              "valueString": "AuditEventOutcome"
            }
          ],
          "strength": "required",
          "description": "Indicates whether the event succeeded or failed",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/audit-event-outcome"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": ".actionNegationInd"
          },
          {
            "identity": "dicom",
            "map": "EventOutcomeIndicator"
          },
          {
            "identity": "w5",
            "map": "what"
          }
        ]
      },
      {
        "id": "AuditEvent.outcomeDesc",
        "path": "AuditEvent.outcomeDesc",
        "short": "Description of the event outcome",
        "definition": "A free text description of the outcome of the event.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "AuditEvent.outcomeDesc",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": ".outboundRelationship[typeCode=OUT].target.text"
          },
          {
            "identity": "dicom",
            "map": "EventOutcomeDescription"
          },
          {
            "identity": "w5",
            "map": "what"
          }
        ]
      },
      {
        "id": "AuditEvent.purposeOfEvent",
        "path": "AuditEvent.purposeOfEvent",
        "short": "The purposeOfUse of the event",
        "definition": "The purposeOfUse (reason) that was used during the event being recorded.",
        "comment": "Use AuditEvent.agent.purposeOfUse when you know that it is specific to the agent, otherwise use AuditEvent.purposeOfEvent. For example, during a machine-to-machine transfer it might not be obvious to the audit system who caused the event, but it does know why.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "AuditEvent.purposeOfEvent",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "CodeableConcept"
          }
        ],
        "isSummary": true,
        "binding": {
          "extension": [
            {
              "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
              "valueString": "AuditPurposeOfUse"
            }
          ],
          "strength": "extensible",
          "description": "The reason the activity took place.",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/v3-PurposeOfUse"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": "* .reasonCode [ControlActReason when Act.class = CACT Control Act]\n*.outboundRelationship[typeCode=RSON].target"
          },
          {
            "identity": "dicom",
            "map": "EventPurposeOfUse"
          },
          {
            "identity": "w3c.prov",
            "map": "Activity.Activity"
          },
          {
            "identity": "fhirprovenance",
            "map": "Provenance.reason, Provenance.activity"
          },
          {
            "identity": "w5",
            "map": "why"
          }
        ]
      },
      {
        "id": "AuditEvent.agent",
        "path": "AuditEvent.agent",
        "short": "Participants",
        "definition": "Participants",
        "comment": "Several agents may be associated (i.e. have some responsibility for an activity) with        an event or activity.  For example, an activity may be initiated by one user for other users or involve more        than one user. However, only one user may be the initiator/requestor for the activity.",
        "requirements": "An agent can be a person, an organization, software, device, or other actors that may        be ascribed responsibility.",
        "alias": [
          "ActiveParticipant"
        ],
        "min": 1,
        "max": "*",
        "base": {
          "path": "AuditEvent.agent",
          "min": 1,
          "max": "*"
        },
        "type": [
          {
            "code": "BackboneElement"
          }
        ],
        "constraint": [
          {
            "key": "ele-1",
            "severity": "error",
            "human": "All FHIR elements must have a @value or children",
            "expression": "hasValue() | (children().count() > id.count())",
            "xpath": "@value|f:*|h:div",
            "source": "Element"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": ".participation"
          },
          {
            "identity": "dicom",
            "map": "ActiveParticipant"
          },
          {
            "identity": "w3c.prov",
            "map": "Agent"
          },
          {
            "identity": "fhirprovenance",
            "map": "Provenance.agent"
          },
          {
            "identity": "w5",
            "map": "who"
          },
          {
            "identity": "ch-atc",
            "map": "Participants"
          }
        ]
      },
      {
        "id": "AuditEvent.agent.id",
        "path": "AuditEvent.agent.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "AuditEvent.agent.extension",
        "path": "AuditEvent.agent.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "AuditEvent.agent.modifierExtension",
        "path": "AuditEvent.agent.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "BackboneElement.modifierExtension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isModifier": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "id": "AuditEvent.agent.role",
        "path": "AuditEvent.agent.role",
        "short": "Agent role in the event",
        "definition": "The security role that the user was acting under, that come from local codes defined by        the access control security system (e.g. RBAC, ABAC) used in the local context.",
        "comment": "Should be roles relevant to the event. Should  not be an exhaustive list of roles.",
        "requirements": "This value ties an audited event to a user's role(s). It is an optional value that might be used to group events for analysis by user functional role categories.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "AuditEvent.agent.role",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "CodeableConcept"
          }
        ],
        "isSummary": true,
        "binding": {
          "extension": [
            {
              "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
              "valueString": "ConditionKind"
            }
          ],
          "strength": "required",
          "description": "EprParticipant",
          "valueSetReference": {
            "reference": "http://fhir.ch/ig/ch-atc/ValueSet/EprParticipant"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": ".role and/or .typeCode and/or .functionCode"
          },
          {
            "identity": "dicom",
            "map": "RoleIdCode"
          },
          {
            "identity": "w3c.prov",
            "map": "Agent.Attribution"
          },
          {
            "identity": "fhirprovenance",
            "map": "Provenance.agent.role"
          },
          {
            "identity": "w5",
            "map": "who"
          },
          {
            "identity": "ch-atc",
            "map": "role (PAT, HCP, ASS, REP, GRP, PADM)"
          }
        ]
      },
      {
        "id": "AuditEvent.agent.reference",
        "path": "AuditEvent.agent.reference",
        "short": "Direct reference to resource",
        "definition": "Direct reference to a resource that identifies the agent.",
        "requirements": "This field ties an audit event to a specific resource.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "AuditEvent.agent.reference",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Reference",
            "targetProfile": "http://hl7.org/fhir/StructureDefinition/Practitioner"
          },
          {
            "code": "Reference",
            "targetProfile": "http://hl7.org/fhir/StructureDefinition/Organization"
          },
          {
            "code": "Reference",
            "targetProfile": "http://hl7.org/fhir/StructureDefinition/Device"
          },
          {
            "code": "Reference",
            "targetProfile": "http://hl7.org/fhir/StructureDefinition/Patient"
          },
          {
            "code": "Reference",
            "targetProfile": "http://hl7.org/fhir/StructureDefinition/RelatedPerson"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": ".id"
          },
          {
            "identity": "w3c.prov",
            "map": "Agent.Identity"
          },
          {
            "identity": "fhirprovenance",
            "map": "Provenance.agent.actor"
          },
          {
            "identity": "w5",
            "map": "who"
          }
        ]
      },
      {
        "id": "AuditEvent.agent.userId",
        "path": "AuditEvent.agent.userId",
        "short": "Unique identifier for the user",
        "definition": "Unique identifier for the user",
        "comment": "A unique value within the Audit Source ID. For node-based authentication -- where only        the system hardware or process, but not a human user, is identified -- User ID would be        the node name.",
        "requirements": "This field ties an audit event to a specific user.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "AuditEvent.agent.userId",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Identifier"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": ".id"
          },
          {
            "identity": "dicom",
            "map": "UserId"
          },
          {
            "identity": "w3c.prov",
            "map": "Agent.Identity"
          },
          {
            "identity": "fhirprovenance",
            "map": "Provenance.agent.userId"
          },
          {
            "identity": "w5",
            "map": "who"
          },
          {
            "identity": "ch-atc",
            "map": "applicable identifier"
          }
        ]
      },
      {
        "id": "AuditEvent.agent.altId",
        "path": "AuditEvent.agent.altId",
        "short": "Alternative User id e.g. authentication",
        "definition": "Alternative agent Identifier. For a human, this should be a user identifier text string from authentication system. This identifier would be one known to a common authentication system (e.g. single sign-on), if available.",
        "requirements": "In some situations, a human user may authenticate with one identity but, to access a specific application system, may use a synonymous identify. For example, some \"single sign on\" implementations will do this. The alternative identifier would then be the original identify  used for authentication, and the User ID is the one known to and used by the application.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "AuditEvent.agent.altId",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": ".id (distinguish id type by root)"
          },
          {
            "identity": "dicom",
            "map": "AlternativeUserId"
          },
          {
            "identity": "w3c.prov",
            "map": "Agent.Identity"
          },
          {
            "identity": "w5",
            "map": "who"
          }
        ]
      },
      {
        "id": "AuditEvent.agent.name",
        "path": "AuditEvent.agent.name",
        "short": "Human-meaningful name for the agent",
        "definition": "AttributeStatement/Attribute[@Name='urn:oasis:names:tc:xspa:1.0:subject:subject- id']/AttributeValue",
        "requirements": "The User ID and Authorization User ID may be internal or otherwise obscure values. This        field assists the auditor in identifying the actual user.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "AuditEvent.agent.name",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": ".name"
          },
          {
            "identity": "dicom",
            "map": "UserName"
          },
          {
            "identity": "w3c.prov",
            "map": "Agent.Identity"
          },
          {
            "identity": "w5",
            "map": "who"
          },
          {
            "identity": "ch-atc",
            "map": "Name"
          }
        ]
      },
      {
        "id": "AuditEvent.agent.requestor",
        "path": "AuditEvent.agent.requestor",
        "short": "Whether user is initiator",
        "definition": "Indicator that the participant is the initiator for the event being audited.",
        "comment": "There can only be one initiator. If the initiator is not clear, then do not choose any        one agent as the initiator.",
        "requirements": "This value is used to distinguish between requestor-users and recipient-users. For example,        one person may initiate a report-output to be sent to another user.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "AuditEvent.agent.requestor",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "boolean"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "If participation.typeCode was author, then true"
          },
          {
            "identity": "dicom",
            "map": "UserIsRequestor"
          },
          {
            "identity": "w5",
            "map": "who"
          },
          {
            "identity": "ch-atc",
            "map": "if participant is Initiator"
          }
        ]
      },
      {
        "id": "AuditEvent.agent.location",
        "path": "AuditEvent.agent.location",
        "short": "Where",
        "definition": "Where the event occurred.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "AuditEvent.agent.location",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Reference",
            "targetProfile": "http://hl7.org/fhir/StructureDefinition/Location"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "* Role.Class =SDLOC\n*Role.Code = ServiceDeliveryLocationRoleType\n *Entity.Code  = PlaceEntityType = df.Types of places for  Entity.Class = PLC\n*EntityClass = PLC = df.A physical place or site with its containing structure. May be natural or man-made. The geographic position of a place may or may not be constant."
          },
          {
            "identity": "w3c.prov",
            "map": "Activity.location"
          },
          {
            "identity": "fhirprovenance",
            "map": "Provenance.location"
          },
          {
            "identity": "w5",
            "map": "where"
          }
        ]
      },
      {
        "id": "AuditEvent.agent.policy",
        "path": "AuditEvent.agent.policy",
        "short": "Policy that authorized event",
        "definition": "The policy or plan that authorized the activity being recorded. Typically, a single activity may have multiple applicable policies, such as patient consent, guarantor funding, etc. The policy would also indicate the security token used.",
        "comment": "For example: Where an OAuth token authorizes, the unique identifier from the OAuth token is placed into the policy element Where a policy engine (e.g. XACML) holds policy logic, the unique policy identifier is placed into the policy element.",
        "requirements": "This value is used retrospectively to determine the authorization policies.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "AuditEvent.agent.policy",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "uri"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "ActPolicyType"
          },
          {
            "identity": "dicom",
            "map": "ParticipantRoleIDCode"
          },
          {
            "identity": "fhirprovenance",
            "map": "Provenance.policy"
          },
          {
            "identity": "w5",
            "map": "why"
          }
        ]
      },
      {
        "id": "AuditEvent.agent.media",
        "path": "AuditEvent.agent.media",
        "short": "Type of media",
        "definition": "Type of media involved. Used when the event is about exporting/importing onto media.",
        "requirements": "Usually, this is used instead of specifying a network address. This field is not used for Media Id (i.e. the serial number of a CD).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "AuditEvent.agent.media",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Coding"
          }
        ],
        "binding": {
          "extension": [
            {
              "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
              "valueString": "DICOMMediaType"
            }
          ],
          "strength": "extensible",
          "description": "Used when the event is about exporting/importing onto media.",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/dicm-405-mediatype"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": ".player.description.mediaType"
          },
          {
            "identity": "dicom",
            "map": "MediaType"
          },
          {
            "identity": "w5",
            "map": "where"
          }
        ]
      },
      {
        "id": "AuditEvent.agent.network",
        "path": "AuditEvent.agent.network",
        "short": "Logical network location for application activity",
        "definition": "Logical network location for application activity, if the activity has a network location.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "AuditEvent.agent.network",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "BackboneElement"
          }
        ],
        "constraint": [
          {
            "key": "ele-1",
            "severity": "error",
            "human": "All FHIR elements must have a @value or children",
            "expression": "hasValue() | (children().count() > id.count())",
            "xpath": "@value|f:*|h:div",
            "source": "Element"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": ".player.description.reference"
          },
          {
            "identity": "w5",
            "map": "where"
          }
        ]
      },
      {
        "id": "AuditEvent.agent.network.id",
        "path": "AuditEvent.agent.network.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "AuditEvent.agent.network.extension",
        "path": "AuditEvent.agent.network.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "AuditEvent.agent.network.modifierExtension",
        "path": "AuditEvent.agent.network.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "BackboneElement.modifierExtension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isModifier": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "id": "AuditEvent.agent.network.address",
        "path": "AuditEvent.agent.network.address",
        "short": "Identifier for the network access point of the user device",
        "definition": "An identifier for the network access point of the user device for the audit event.",
        "comment": "This could be a device id, IP address or some other identifier associated with a device.",
        "requirements": "This datum identifies the user's network access point, which may be distinct from the server that performed the action. It is an optional value that may be used to group events recorded on separate servers for analysis of a specific network access point's data access across all servers.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "AuditEvent.agent.network.address",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "pre-coordinated into URL"
          },
          {
            "identity": "dicom",
            "map": "NetworkAccessPointID"
          },
          {
            "identity": "w3c.prov",
            "map": "Agent.Location"
          },
          {
            "identity": "w5",
            "map": "where"
          }
        ]
      },
      {
        "id": "AuditEvent.agent.network.type",
        "path": "AuditEvent.agent.network.type",
        "short": "The type of network access point",
        "definition": "An identifier for the type of network access point that originated the audit event.",
        "requirements": "This datum identifies the type of network access point identifier of the user device for the audit event. It is an optional value that may be used to group events recorded on separate servers for analysis of access according to a network access point's type.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "AuditEvent.agent.network.type",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "binding": {
          "extension": [
            {
              "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
              "valueString": "AuditEventAgentNetworkType"
            }
          ],
          "strength": "required",
          "description": "The type of network access point of this agent in the audit event",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/network-type"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": "pre-coordinated into URL"
          },
          {
            "identity": "dicom",
            "map": "NetworkAccessPointTypeCode"
          },
          {
            "identity": "w5",
            "map": "where"
          }
        ]
      },
      {
        "id": "AuditEvent.agent.purposeOfUse",
        "path": "AuditEvent.agent.purposeOfUse",
        "short": "Reason given for this user",
        "definition": "The reason (purpose of use), specific to this agent, that was used during the event being recorded.",
        "comment": "Use AuditEvent.agent.purposeOfUse when you know that is specific to the agent, otherwise use AuditEvent.purposeOfEvent. For example, during a machine-to-machine transfer it might not be obvious to the audit system who caused the event, but it does know why.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "AuditEvent.agent.purposeOfUse",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "CodeableConcept"
          }
        ],
        "binding": {
          "extension": [
            {
              "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
              "valueString": "AuditPurposeOfUse"
            }
          ],
          "strength": "extensible",
          "description": "The reason the activity took place.",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/v3-PurposeOfUse"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": "*.reasonCode [ActHealthInformationPurposeOfUseReason codes/v:PurposeOfUse\n(2.16.840.1.113883.1.11.20448)\n* .outboundRelationship[typeCode=RSON or SUBJ].target"
          },
          {
            "identity": "w3c.prov",
            "map": "Agent.Activity"
          },
          {
            "identity": "w5",
            "map": "why"
          }
        ]
      },
      {
        "id": "AuditEvent.source",
        "path": "AuditEvent.source",
        "short": "Audit Event Reporter",
        "definition": "The system that is reporting the event.",
        "comment": "Since multi-tier, distributed, or composite applications make source identification ambiguous, this collection of fields may repeat for each application or process actively involved in the event. For example, multiple value-sets can identify participating web servers, application processes, and database server threads in an n-tier distributed application. Passive event participants (e.g. low-level network transports) need not be identified.",
        "requirements": "The event is reported by one source.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "AuditEvent.source",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "BackboneElement"
          }
        ],
        "constraint": [
          {
            "key": "ele-1",
            "severity": "error",
            "human": "All FHIR elements must have a @value or children",
            "expression": "hasValue() | (children().count() > id.count())",
            "xpath": "@value|f:*|h:div",
            "source": "Element"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": ".participation[typeCode=INF].role[classCode=ASSIGN].player[classCode=DEV, determinerCode=INSTANCE]"
          },
          {
            "identity": "dicom",
            "map": "AuditSourceIdentification"
          },
          {
            "identity": "w5",
            "map": "who.witness"
          }
        ]
      },
      {
        "id": "AuditEvent.source.id",
        "path": "AuditEvent.source.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "AuditEvent.source.extension",
        "path": "AuditEvent.source.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "AuditEvent.source.modifierExtension",
        "path": "AuditEvent.source.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "BackboneElement.modifierExtension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isModifier": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "id": "AuditEvent.source.site",
        "path": "AuditEvent.source.site",
        "short": "Logical source location within the enterprise",
        "definition": "Logical source location within the healthcare enterprise network.  For example, a hospital or other provider location within a multi-entity provider group.",
        "requirements": "This value differentiates among the sites in a multi-site enterprise health information system.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "AuditEvent.source.site",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": ".scopedRole[classCode=LOCE].player.desc"
          },
          {
            "identity": "dicom",
            "map": "AuditEnterpriseSiteId"
          },
          {
            "identity": "w5",
            "map": "who.witness"
          }
        ]
      },
      {
        "id": "AuditEvent.source.identifier",
        "path": "AuditEvent.source.identifier",
        "short": "The identity of source detecting the event",
        "definition": "Identifier of the source where the event was detected.",
        "requirements": "This field ties the event to a specific source system. It may be used to group events for analysis according to where the event was detected.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "AuditEvent.source.identifier",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "Identifier"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": ".id"
          },
          {
            "identity": "dicom",
            "map": "AuditSourceId"
          },
          {
            "identity": "w5",
            "map": "who.witness"
          }
        ]
      },
      {
        "id": "AuditEvent.source.type",
        "path": "AuditEvent.source.type",
        "short": "The type of source where event originated",
        "definition": "Code specifying the type of source where event originated.",
        "requirements": "This field indicates which type of source is identified by the Audit Source ID. It is an optional value that may be used to group events for analysis according to the type of source where the event occurred.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "AuditEvent.source.type",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Coding"
          }
        ],
        "binding": {
          "extension": [
            {
              "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
              "valueString": "AuditEventSourceType"
            }
          ],
          "strength": "extensible",
          "description": "Code specifying the type of system that detected and recorded the event.",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/audit-source-type"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": ".code"
          },
          {
            "identity": "dicom",
            "map": "AuditSourceTypeCode"
          },
          {
            "identity": "w5",
            "map": "who.witness"
          }
        ]
      },
      {
        "id": "AuditEvent.entity",
        "path": "AuditEvent.entity",
        "slicing": {
          "discriminator": [
            {
              "type": "value",
              "path": "type.code"
            }
          ],
          "rules": "open"
        },
        "short": "Data or objects used",
        "definition": "Specific instances of data or objects that have been accessed.",
        "comment": "Required unless the values for event identification, agent identification, and audit source        identification are sufficient to document the entire auditable event. Because events may        have more than one entity, this group can be a repeating set of values.",
        "requirements": "The event may have other entities involved.",
        "alias": [
          "ParticipantObject"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "AuditEvent.entity",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "BackboneElement"
          }
        ],
        "constraint": [
          {
            "key": "ele-1",
            "severity": "error",
            "human": "All FHIR elements must have a @value or children",
            "expression": "hasValue() | (children().count() > id.count())",
            "xpath": "@value|f:*|h:div",
            "source": "Element"
          },
          {
            "key": "sev-1",
            "severity": "error",
            "human": "Either a name or a query (NOT both)",
            "expression": "name.empty() or query.empty()",
            "xpath": "not(exists(f:name)) or not(exists(f:query))",
            "source": "AuditEvent.entity"
          },
          {
            "key": "sev-1",
            "severity": "error",
            "human": "Either a name or a query (NOT both)",
            "expression": "name.empty() or query.empty()",
            "xpath": "not(exists(f:name)) or not(exists(f:query))"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": ".outboundRelationship[typeCode=SUBJ].target  or  .participation[typeCode=SBJ].role"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectIdentification"
          },
          {
            "identity": "w3c.prov",
            "map": "Entity"
          },
          {
            "identity": "fhirprovenance",
            "map": "Provenance.target, Provenance.entity"
          },
          {
            "identity": "w5",
            "map": "what"
          },
          {
            "identity": "w5",
            "map": "FiveWs.what[x]"
          },
          {
            "identity": "rim",
            "map": ".outboundRelationship[typeCode=SUBJ].target  or .participation[typeCode=SBJ].role"
          }
        ]
      },
      {
        "id": "AuditEvent.entity.id",
        "path": "AuditEvent.entity.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "AuditEvent.entity.extension",
        "path": "AuditEvent.entity.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "AuditEvent.entity.modifierExtension",
        "path": "AuditEvent.entity.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "BackboneElement.modifierExtension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isModifier": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "id": "AuditEvent.entity.identifier",
        "path": "AuditEvent.entity.identifier",
        "short": "Specific instance of object",
        "definition": "Identifies a specific instance of the entity. The reference should always be version specific.",
        "comment": "Identifier detail depends on entity type.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.identifier",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Identifier"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": ".id.extension"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectID and ParticipantObjectIDTypeCode"
          },
          {
            "identity": "w5",
            "map": "what"
          }
        ]
      },
      {
        "id": "AuditEvent.entity.reference",
        "path": "AuditEvent.entity.reference",
        "short": "Specific instance of resource",
        "definition": "Identifies a specific instance of the entity. The reference should be version specific.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.reference",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Reference",
            "targetProfile": "http://hl7.org/fhir/StructureDefinition/Resource"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "[self]"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectID"
          },
          {
            "identity": "fhirprovenance",
            "map": "Provenance.target, Provenance.entity.reference"
          },
          {
            "identity": "w5",
            "map": "what"
          }
        ]
      },
      {
        "id": "AuditEvent.entity.type",
        "path": "AuditEvent.entity.type",
        "short": "Type of entity involved",
        "definition": "The type of the object that was involved in this audit event.",
        "comment": "This value is distinct from the user's role or any user relationship to the entity.",
        "requirements": "To describe the object being acted upon. In addition to queries on the subject of the action in an auditable event, it is also important to be able to query on the object type for the action.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.type",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Coding"
          }
        ],
        "binding": {
          "extension": [
            {
              "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
              "valueString": "AuditEventEntityType"
            }
          ],
          "strength": "extensible",
          "description": "Code for the entity type involved in the audit event",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/audit-entity-type"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": "[self::Act].code or role.player.code"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectTypeCode"
          },
          {
            "identity": "w3c.prov",
            "map": "Entity.type"
          },
          {
            "identity": "fhirprovenance",
            "map": "Provenance.entity.type"
          },
          {
            "identity": "w5",
            "map": "what"
          }
        ]
      },
      {
        "id": "AuditEvent.entity.role",
        "path": "AuditEvent.entity.role",
        "short": "What role the entity played",
        "definition": "Code representing the role the entity played in the event being audited.",
        "requirements": "For some detailed audit analysis it may be necessary to indicate a more granular type of entity, based on the application role it serves.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.role",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Coding"
          }
        ],
        "binding": {
          "extension": [
            {
              "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
              "valueString": "AuditEventEntityRole"
            }
          ],
          "strength": "extensible",
          "description": "Code representing the role the entity played in the audit event",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/object-role"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": "role.code (not sure what this would mean for an Act)"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectTypeCodeRole"
          },
          {
            "identity": "w3c.prov",
            "map": "Entity.role"
          },
          {
            "identity": "w5",
            "map": "context"
          }
        ]
      },
      {
        "id": "AuditEvent.entity.lifecycle",
        "path": "AuditEvent.entity.lifecycle",
        "short": "Life-cycle stage for the entity",
        "definition": "Identifier for the data life-cycle stage for the entity.",
        "comment": "This can be used to provide an audit trail for data, over time, as it passes through the system.",
        "requirements": "Institutional policies for privacy and security may optionally fall under different accountability rules based on data life cycle. This provides a differentiating value for those cases.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.lifecycle",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Coding"
          }
        ],
        "binding": {
          "extension": [
            {
              "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
              "valueString": "AuditEventEntityLifecycle"
            }
          ],
          "strength": "extensible",
          "description": "Identifier for the data life-cycle stage for the entity",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/object-lifecycle-events"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": "target of ObservationEvent[code=\"lifecycle\"].value"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectDataLifeCycle"
          },
          {
            "identity": "w3c.prov",
            "map": "Entity.role"
          },
          {
            "identity": "fhirprovenance",
            "map": "Provenance.entity.role"
          },
          {
            "identity": "w5",
            "map": "context"
          }
        ]
      },
      {
        "id": "AuditEvent.entity.securityLabel",
        "path": "AuditEvent.entity.securityLabel",
        "short": "Security labels on the entity",
        "definition": "Security labels for the identified entity.",
        "comment": "Copied from entity meta security tags.",
        "requirements": "This field identifies the security labels for a specific instance of an object, such as a patient, to detect/track privacy and security issues.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "AuditEvent.entity.securityLabel",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Coding"
          }
        ],
        "binding": {
          "extension": [
            {
              "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
              "valueString": "SecurityLabels"
            },
            {
              "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
              "valueBoolean": true
            }
          ],
          "strength": "extensible",
          "description": "Security Labels from the Healthcare Privacy and Security Classification System.",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/security-labels"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": ".confidentialityCode"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectSensitivity"
          },
          {
            "identity": "w5",
            "map": "context"
          }
        ]
      },
      {
        "id": "AuditEvent.entity.name",
        "path": "AuditEvent.entity.name",
        "short": "Descriptor for entity",
        "definition": "A name of the entity in the audit event.",
        "comment": "This field may be used in a query/report to identify audit events for a specific person.  For example, where multiple synonymous entity identifiers (patient number, medical record number, encounter number, etc.) have been used.",
        "requirements": "Use only where entity can't be identified with an identifier.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.name",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "condition": [
          "sev-1"
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": ".title"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectName"
          },
          {
            "identity": "w3c.prov",
            "map": "Entity.Label"
          },
          {
            "identity": "w5",
            "map": "context"
          }
        ]
      },
      {
        "id": "AuditEvent.entity.description",
        "path": "AuditEvent.entity.description",
        "short": "Descriptive text",
        "definition": "Text that describes the entity in more detail.",
        "requirements": "Use only where entity can't be identified with an identifier.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.description",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": ".text"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectDescription"
          },
          {
            "identity": "w5",
            "map": "context"
          }
        ]
      },
      {
        "id": "AuditEvent.entity.query",
        "path": "AuditEvent.entity.query",
        "short": "Query parameters",
        "definition": "The query parameters for a query-type entities.",
        "requirements": "For query events, it may be necessary to capture the actual query input to the query process in order to identify the specific event. Because of differences among query implementations and data encoding for them, this is a base 64 encoded data blob. It may be subsequently decoded or interpreted by downstream audit analysis processing.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.query",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "base64Binary"
          }
        ],
        "condition": [
          "sev-1"
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "No mapping"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectQuery"
          },
          {
            "identity": "w5",
            "map": "context"
          }
        ]
      },
      {
        "id": "AuditEvent.entity.detail",
        "path": "AuditEvent.entity.detail",
        "short": "Additional Information about the entity",
        "definition": "Tagged value pairs for conveying additional information about the entity.",
        "requirements": "Implementation-defined data about specific details of the object accessed or used.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "AuditEvent.entity.detail",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "BackboneElement"
          }
        ],
        "constraint": [
          {
            "key": "ele-1",
            "severity": "error",
            "human": "All FHIR elements must have a @value or children",
            "expression": "hasValue() | (children().count() > id.count())",
            "xpath": "@value|f:*|h:div",
            "source": "Element"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": ".inboundRelationship[typeCode=SUBJ].target[classCode=OBS, moodCode=EVN]"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectDetail"
          },
          {
            "identity": "w5",
            "map": "context"
          }
        ]
      },
      {
        "id": "AuditEvent.entity.detail.id",
        "path": "AuditEvent.entity.detail.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "AuditEvent.entity.detail.extension",
        "path": "AuditEvent.entity.detail.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "AuditEvent.entity.detail.modifierExtension",
        "path": "AuditEvent.entity.detail.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "BackboneElement.modifierExtension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isModifier": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "id": "AuditEvent.entity.detail.type",
        "path": "AuditEvent.entity.detail.type",
        "short": "Name of the property",
        "definition": "The type of extra detail provided in the value.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.detail.type",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": ".code"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectDetail.type"
          },
          {
            "identity": "w5",
            "map": "context"
          }
        ]
      },
      {
        "id": "AuditEvent.entity.detail.value",
        "path": "AuditEvent.entity.detail.value",
        "short": "Property value",
        "definition": "The details, base64 encoded. Used to carry bulk information.",
        "comment": "The value is base64 encoded to enable various encodings or binary content.",
        "requirements": "Should not duplicate the entity value unless absolutely necessary.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.detail.value",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "base64Binary"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": ".value"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectDetail.value"
          },
          {
            "identity": "w5",
            "map": "context"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient",
        "path": "AuditEvent.entity",
        "sliceName": "Patient",
        "short": "Patient",
        "definition": "Specific instances of data or objects that have been accessed.",
        "comment": "Required unless the values for event identification, agent identification, and audit source identification are sufficient to document the entire auditable event. Because events may have more than one entity, this group can be a repeating set of values.",
        "requirements": "The event may have other entities involved.",
        "alias": [
          "ParticipantObject"
        ],
        "min": 1,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "BackboneElement"
          }
        ],
        "constraint": [
          {
            "key": "ele-1",
            "severity": "error",
            "human": "All FHIR elements must have a @value or children",
            "expression": "hasValue() | (children().count() > id.count())",
            "xpath": "@value|f:*|h:div",
            "source": "Element"
          },
          {
            "key": "sev-1",
            "severity": "error",
            "human": "Either a name or a query (NOT both)",
            "expression": "name.empty() or query.empty()",
            "xpath": "not(exists(f:name)) or not(exists(f:query))",
            "source": "AuditEvent.entity"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": ".outboundRelationship[typeCode=SUBJ].target  or  .participation[typeCode=SBJ].role"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectIdentification"
          },
          {
            "identity": "w3c.prov",
            "map": "Entity"
          },
          {
            "identity": "fhirprovenance",
            "map": "Provenance.target, Provenance.entity"
          },
          {
            "identity": "w5",
            "map": "what"
          },
          {
            "identity": "ch-atc",
            "map": "Patient"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.id",
        "path": "AuditEvent.entity.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.extension",
        "path": "AuditEvent.entity.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.modifierExtension",
        "path": "AuditEvent.entity.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "BackboneElement.modifierExtension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isModifier": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.identifier",
        "path": "AuditEvent.entity.identifier",
        "short": "Patient Id (EPR-SPID)",
        "definition": "Patient Id (EPR-SPID)",
        "comment": ".",
        "min": 1,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.identifier",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Identifier"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": ".id.extension"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectID and ParticipantObjectIDTypeCode"
          },
          {
            "identity": "w5",
            "map": "what"
          },
          {
            "identity": "ch-atc",
            "map": "EPR-SPID"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.identifier.id",
        "path": "AuditEvent.entity.identifier.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.identifier.extension",
        "path": "AuditEvent.entity.identifier.extension",
        "slicing": {
          "discriminator": [
            {
              "type": "value",
              "path": "url"
            }
          ],
          "description": "Extensions are always sliced by (at least) url",
          "rules": "open"
        },
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.identifier.use",
        "path": "AuditEvent.entity.identifier.use",
        "short": "usual | official | temp | secondary (If known)",
        "definition": "The purpose of this identifier.",
        "comment": "This is labeled as \"Is Modifier\" because applications should not mistake a temporary id for a permanent one. Applications can assume that an identifier is permanent unless it explicitly says that it is temporary.",
        "requirements": "Allows the appropriate identifier for a particular context of use to be selected from among a set of identifiers.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Identifier.use",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "isModifier": true,
        "isSummary": true,
        "binding": {
          "extension": [
            {
              "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
              "valueString": "IdentifierUse"
            }
          ],
          "strength": "required",
          "description": "Identifies the purpose for this identifier, if known .",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/identifier-use"
          }
        },
        "mapping": [
          {
            "identity": "v2",
            "map": "N/A"
          },
          {
            "identity": "rim",
            "map": "Role.code or implied by context"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.identifier.type",
        "path": "AuditEvent.entity.identifier.type",
        "short": "Description of identifier",
        "definition": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
        "comment": "This element deals only with general categories of identifiers.  It SHOULD not be used for codes that correspond 1..1 with the Identifier.system. Some identifiers may fall into multiple categories due to common usage. \n\nWhere the system is known, a type is unnecessary because the type is always part of the system definition. However systems often need to handle identifiers where the system is not known. There is not a 1:1 relationship between type and system, since many different systems have the same type.",
        "requirements": "Allows users to make use of identifiers when the identifier system is not known.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Identifier.type",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "CodeableConcept"
          }
        ],
        "isSummary": true,
        "binding": {
          "extension": [
            {
              "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
              "valueString": "IdentifierType"
            },
            {
              "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
              "valueBoolean": true
            }
          ],
          "strength": "extensible",
          "description": "A coded type for an identifier that can be used to determine which identifier to use for a specific purpose.",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/identifier-type"
          }
        },
        "mapping": [
          {
            "identity": "v2",
            "map": "CX.5"
          },
          {
            "identity": "rim",
            "map": "Role.code or implied by context"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.identifier.system",
        "path": "AuditEvent.entity.identifier.system",
        "short": "The namespace for the identifier value",
        "definition": "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
        "requirements": "There are many sets  of identifiers.  To perform matching of two identifiers, we need to know what set we're dealing with. The system identifies a particular set of unique identifiers.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Identifier.system",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "uri"
          }
        ],
        "fixedUri": "urn:oid:2.16.756.5.30.1.127.3.10.3",
        "example": [
          {
            "label": "General",
            "valueUri": "http://www.acme.com/identifiers/patient or urn:ietf:rfc:3986 if the Identifier.value itself is a full uri"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "CX.4 / EI-2-4"
          },
          {
            "identity": "rim",
            "map": "II.root or Role.id.root"
          },
          {
            "identity": "servd",
            "map": "./IdentifierType"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.identifier.value",
        "path": "AuditEvent.entity.identifier.value",
        "short": "The value that is unique",
        "definition": "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
        "comment": "If the value is a full URI, then the system SHALL be urn:ietf:rfc:3986.  The value's primary purpose is computational mapping.  As a result, it may be normalized for comparison purposes (e.g. removing non-significant whitespace, dashes, etc.)  A value formatted for human display can be conveyed using the [Rendered Value extension](extension-rendered-value.html).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Identifier.value",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "example": [
          {
            "label": "General",
            "valueString": "123456"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "CX.1 / EI.1"
          },
          {
            "identity": "rim",
            "map": "II.extension or II.root if system indicates OID or GUID (Or Role.id.extension or root)"
          },
          {
            "identity": "servd",
            "map": "./Value"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.identifier.period",
        "path": "AuditEvent.entity.identifier.period",
        "short": "Time period when id is/was valid for use",
        "definition": "Time period during which identifier is/was valid for use.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Identifier.period",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Period"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "CX.7 + CX.8"
          },
          {
            "identity": "rim",
            "map": "Role.effectiveTime or implied by context"
          },
          {
            "identity": "servd",
            "map": "./StartDate and ./EndDate"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.identifier.assigner",
        "path": "AuditEvent.entity.identifier.assigner",
        "short": "Organization that issued id (may be just text)",
        "definition": "Organization that issued/manages the identifier.",
        "comment": "The Identifier.assigner may omit the .reference element and only contain a .display element reflecting the name or other textual information about the assigning organization.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Identifier.assigner",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Reference",
            "targetProfile": "http://hl7.org/fhir/StructureDefinition/Organization"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "CX.4 / (CX.4,CX.9,CX.10)"
          },
          {
            "identity": "rim",
            "map": "II.assigningAuthorityName but note that this is an improper use by the definition of the field.  Also Role.scoper"
          },
          {
            "identity": "servd",
            "map": "./IdentifierIssuingAuthority"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.reference",
        "path": "AuditEvent.entity.reference",
        "short": "Specific instance of resource",
        "definition": "Identifies a specific instance of the entity. The reference should be version specific.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.reference",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Reference",
            "targetProfile": "http://hl7.org/fhir/StructureDefinition/Resource"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "[self]"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectID"
          },
          {
            "identity": "fhirprovenance",
            "map": "Provenance.target, Provenance.entity.reference"
          },
          {
            "identity": "w5",
            "map": "what"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.type",
        "path": "AuditEvent.entity.type",
        "short": "Type of entity involved",
        "definition": "The type of the object that was involved in this audit event.",
        "comment": "This value is distinct from the user's role or any user relationship to the entity.",
        "requirements": "To describe the object being acted upon. In addition to queries on the subject of the        action in an auditable event, it is also important to be able to query on the object type        for the action.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.type",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Coding"
          }
        ],
        "isSummary": true,
        "binding": {
          "extension": [
            {
              "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
              "valueString": "AuditEventEntityType"
            }
          ],
          "strength": "extensible",
          "description": "Code for the entity type involved in the audit event",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/audit-entity-type"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": "[self::Act].code or role.player.code"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectTypeCode"
          },
          {
            "identity": "w3c.prov",
            "map": "Entity.type"
          },
          {
            "identity": "fhirprovenance",
            "map": "Provenance.entity.type"
          },
          {
            "identity": "w5",
            "map": "what"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.type.id",
        "path": "AuditEvent.entity.type.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.type.extension",
        "path": "AuditEvent.entity.type.extension",
        "slicing": {
          "discriminator": [
            {
              "type": "value",
              "path": "url"
            }
          ],
          "description": "Extensions are always sliced by (at least) url",
          "rules": "open"
        },
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.type.system",
        "path": "AuditEvent.entity.type.system",
        "short": "Identity of the terminology system",
        "definition": "The identification of the code system that defines the meaning of the symbol in the code.",
        "comment": "The URI may be an OID (urn:oid:...) or a UUID (urn:uuid:...).  OIDs and UUIDs SHALL be references to the HL7 OID registry. Otherwise, the URI should come from HL7's list of FHIR defined special URIs or it should de-reference to some definition that establish the system clearly and unambiguously.",
        "requirements": "Need to be unambiguous about the source of the definition of the symbol.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Coding.system",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "uri"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "C*E.3"
          },
          {
            "identity": "rim",
            "map": "./codeSystem"
          },
          {
            "identity": "orim",
            "map": "fhir:Coding.system rdfs:subPropertyOf dt:CDCoding.codeSystem"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.type.version",
        "path": "AuditEvent.entity.type.version",
        "short": "Version of the system - if relevant",
        "definition": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured. and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.",
        "comment": "Where the terminology does not clearly define what string should be used to identify code system versions, the recommendation is to use the date (expressed in FHIR date format) on which that version was officially published as the version date.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Coding.version",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "C*E.7"
          },
          {
            "identity": "rim",
            "map": "./codeSystemVersion"
          },
          {
            "identity": "orim",
            "map": "fhir:Coding.version rdfs:subPropertyOf dt:CDCoding.codeSystemVersion"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.type.code",
        "path": "AuditEvent.entity.type.code",
        "short": "Symbol in syntax defined by the system",
        "definition": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
        "requirements": "Need to refer to a particular code in the system.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Coding.code",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "fixedCode": "1",
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "C*E.1"
          },
          {
            "identity": "rim",
            "map": "./code"
          },
          {
            "identity": "orim",
            "map": "fhir:Coding.code rdfs:subPropertyOf dt:CDCoding.code"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.type.display",
        "extension": [
          {
            "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-translatable",
            "valueBoolean": true
          }
        ],
        "path": "AuditEvent.entity.type.display",
        "short": "Representation defined by the system",
        "definition": "A representation of the meaning of the code in the system, following the rules of the system.",
        "requirements": "Need to be able to carry a human-readable meaning of the code for readers that do not know  the system.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Coding.display",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "C*E.2 - but note this is not well followed"
          },
          {
            "identity": "rim",
            "map": "CV.displayName"
          },
          {
            "identity": "orim",
            "map": "fhir:Coding.display rdfs:subPropertyOf dt:CDCoding.displayName"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.type.userSelected",
        "path": "AuditEvent.entity.type.userSelected",
        "short": "If this coding was chosen directly by the user",
        "definition": "Indicates that this coding was chosen by a user directly - i.e. off a pick list of available items (codes or displays).",
        "comment": "Amongst a set of alternatives, a directly chosen code is the most appropriate starting point for new translations. There is some ambiguity about what exactly 'directly chosen' implies, and trading partner agreement may be needed to clarify the use of this element and its consequences more completely.",
        "requirements": "This has been identified as a clinical safety criterium - that this exact system/code pair was chosen explicitly, rather than inferred by the system based on some rules or language processing.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Coding.userSelected",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "boolean"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "Sometimes implied by being first"
          },
          {
            "identity": "rim",
            "map": "CD.codingRationale"
          },
          {
            "identity": "orim",
            "map": "fhir:Coding.userSelected fhir:mapsTo dt:CDCoding.codingRationale. fhir:Coding.userSelected fhir:hasMap fhir:Coding.userSelected.map. fhir:Coding.userSelected.map a fhir:Map;   fhir:target dt:CDCoding.codingRationale. fhir:Coding.userSelected\\#true a [     fhir:source \"true\";     fhir:target dt:CDCoding.codingRationale\\#O   ]"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.role",
        "path": "AuditEvent.entity.role",
        "short": "What role the entity played",
        "definition": "Code representing the role the entity played in the event being audited.",
        "requirements": "For some detailed audit analysis it may be necessary to indicate a more granular type        of entity, based on the application role it serves.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.role",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Coding"
          }
        ],
        "isSummary": true,
        "binding": {
          "extension": [
            {
              "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
              "valueString": "AuditEventEntityRole"
            }
          ],
          "strength": "extensible",
          "description": "Code representing the role the entity played in the audit event",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/object-role"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": "role.code (not sure what this would mean for an Act)"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectTypeCodeRole"
          },
          {
            "identity": "w3c.prov",
            "map": "Entity.role"
          },
          {
            "identity": "w5",
            "map": "context"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.role.id",
        "path": "AuditEvent.entity.role.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.role.extension",
        "path": "AuditEvent.entity.role.extension",
        "slicing": {
          "discriminator": [
            {
              "type": "value",
              "path": "url"
            }
          ],
          "description": "Extensions are always sliced by (at least) url",
          "rules": "open"
        },
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.role.system",
        "path": "AuditEvent.entity.role.system",
        "short": "Identity of the terminology system",
        "definition": "The identification of the code system that defines the meaning of the symbol in the code.",
        "comment": "The URI may be an OID (urn:oid:...) or a UUID (urn:uuid:...).  OIDs and UUIDs SHALL be references to the HL7 OID registry. Otherwise, the URI should come from HL7's list of FHIR defined special URIs or it should de-reference to some definition that establish the system clearly and unambiguously.",
        "requirements": "Need to be unambiguous about the source of the definition of the symbol.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Coding.system",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "uri"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "C*E.3"
          },
          {
            "identity": "rim",
            "map": "./codeSystem"
          },
          {
            "identity": "orim",
            "map": "fhir:Coding.system rdfs:subPropertyOf dt:CDCoding.codeSystem"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.role.version",
        "path": "AuditEvent.entity.role.version",
        "short": "Version of the system - if relevant",
        "definition": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured. and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.",
        "comment": "Where the terminology does not clearly define what string should be used to identify code system versions, the recommendation is to use the date (expressed in FHIR date format) on which that version was officially published as the version date.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Coding.version",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "C*E.7"
          },
          {
            "identity": "rim",
            "map": "./codeSystemVersion"
          },
          {
            "identity": "orim",
            "map": "fhir:Coding.version rdfs:subPropertyOf dt:CDCoding.codeSystemVersion"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.role.code",
        "path": "AuditEvent.entity.role.code",
        "short": "Symbol in syntax defined by the system",
        "definition": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
        "requirements": "Need to refer to a particular code in the system.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Coding.code",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "fixedCode": "1",
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "C*E.1"
          },
          {
            "identity": "rim",
            "map": "./code"
          },
          {
            "identity": "orim",
            "map": "fhir:Coding.code rdfs:subPropertyOf dt:CDCoding.code"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.role.display",
        "extension": [
          {
            "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-translatable",
            "valueBoolean": true
          }
        ],
        "path": "AuditEvent.entity.role.display",
        "short": "Representation defined by the system",
        "definition": "A representation of the meaning of the code in the system, following the rules of the system.",
        "requirements": "Need to be able to carry a human-readable meaning of the code for readers that do not know  the system.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Coding.display",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "C*E.2 - but note this is not well followed"
          },
          {
            "identity": "rim",
            "map": "CV.displayName"
          },
          {
            "identity": "orim",
            "map": "fhir:Coding.display rdfs:subPropertyOf dt:CDCoding.displayName"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.role.userSelected",
        "path": "AuditEvent.entity.role.userSelected",
        "short": "If this coding was chosen directly by the user",
        "definition": "Indicates that this coding was chosen by a user directly - i.e. off a pick list of available items (codes or displays).",
        "comment": "Amongst a set of alternatives, a directly chosen code is the most appropriate starting point for new translations. There is some ambiguity about what exactly 'directly chosen' implies, and trading partner agreement may be needed to clarify the use of this element and its consequences more completely.",
        "requirements": "This has been identified as a clinical safety criterium - that this exact system/code pair was chosen explicitly, rather than inferred by the system based on some rules or language processing.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Coding.userSelected",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "boolean"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "Sometimes implied by being first"
          },
          {
            "identity": "rim",
            "map": "CD.codingRationale"
          },
          {
            "identity": "orim",
            "map": "fhir:Coding.userSelected fhir:mapsTo dt:CDCoding.codingRationale. fhir:Coding.userSelected fhir:hasMap fhir:Coding.userSelected.map. fhir:Coding.userSelected.map a fhir:Map;   fhir:target dt:CDCoding.codingRationale. fhir:Coding.userSelected\\#true a [     fhir:source \"true\";     fhir:target dt:CDCoding.codingRationale\\#O   ]"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.lifecycle",
        "path": "AuditEvent.entity.lifecycle",
        "short": "Life-cycle stage for the entity",
        "definition": "Identifier for the data life-cycle stage for the entity.",
        "comment": "This can be used to provide an audit trail for data, over time, as it passes through the system.",
        "requirements": "Institutional policies for privacy and security may optionally fall under different accountability rules based on data life cycle. This provides a differentiating value for those cases.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.lifecycle",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Coding"
          }
        ],
        "binding": {
          "extension": [
            {
              "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
              "valueString": "AuditEventEntityLifecycle"
            }
          ],
          "strength": "extensible",
          "description": "Identifier for the data life-cycle stage for the entity",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/object-lifecycle-events"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": "target of ObservationEvent[code=\"lifecycle\"].value"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectDataLifeCycle"
          },
          {
            "identity": "w3c.prov",
            "map": "Entity.role"
          },
          {
            "identity": "fhirprovenance",
            "map": "Provenance.entity.role"
          },
          {
            "identity": "w5",
            "map": "context"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.securityLabel",
        "path": "AuditEvent.entity.securityLabel",
        "short": "Security labels on the entity",
        "definition": "Security labels for the identified entity.",
        "comment": "Copied from entity meta security tags.",
        "requirements": "This field identifies the security labels for a specific instance of an object, such as a patient, to detect/track privacy and security issues.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "AuditEvent.entity.securityLabel",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Coding"
          }
        ],
        "binding": {
          "extension": [
            {
              "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
              "valueString": "SecurityLabels"
            },
            {
              "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
              "valueBoolean": true
            }
          ],
          "strength": "extensible",
          "description": "Security Labels from the Healthcare Privacy and Security Classification System.",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/security-labels"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": ".confidentialityCode"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectSensitivity"
          },
          {
            "identity": "w5",
            "map": "context"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.name",
        "path": "AuditEvent.entity.name",
        "short": "Descriptor for entity",
        "definition": "A name of the entity in the audit event.",
        "comment": "This field may be used in a query/report to identify audit events for a specific person.  For example, where multiple synonymous entity identifiers (patient number, medical record number, encounter number, etc.) have been used.",
        "requirements": "Use only where entity can't be identified with an identifier.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.name",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "condition": [
          "sev-1"
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": ".title"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectName"
          },
          {
            "identity": "w3c.prov",
            "map": "Entity.Label"
          },
          {
            "identity": "w5",
            "map": "context"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.description",
        "path": "AuditEvent.entity.description",
        "short": "Descriptive text",
        "definition": "Text that describes the entity in more detail.",
        "requirements": "Use only where entity can't be identified with an identifier.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.description",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": ".text"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectDescription"
          },
          {
            "identity": "w5",
            "map": "context"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.query",
        "path": "AuditEvent.entity.query",
        "short": "Query parameters",
        "definition": "The query parameters for a query-type entities.",
        "requirements": "For query events, it may be necessary to capture the actual query input to the query process in order to identify the specific event. Because of differences among query implementations and data encoding for them, this is a base 64 encoded data blob. It may be subsequently decoded or interpreted by downstream audit analysis processing.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.query",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "base64Binary"
          }
        ],
        "condition": [
          "sev-1"
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "No mapping"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectQuery"
          },
          {
            "identity": "w5",
            "map": "context"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.detail",
        "path": "AuditEvent.entity.detail",
        "short": "Additional Information about the entity",
        "definition": "Tagged value pairs for conveying additional information about the entity.",
        "requirements": "Implementation-defined data about specific details of the object accessed or used.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "AuditEvent.entity.detail",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "BackboneElement"
          }
        ],
        "constraint": [
          {
            "key": "ele-1",
            "severity": "error",
            "human": "All FHIR elements must have a @value or children",
            "expression": "hasValue() | (children().count() > id.count())",
            "xpath": "@value|f:*|h:div",
            "source": "Element"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": ".inboundRelationship[typeCode=SUBJ].target[classCode=OBS, moodCode=EVN]"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectDetail"
          },
          {
            "identity": "w5",
            "map": "context"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.detail.id",
        "path": "AuditEvent.entity.detail.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.detail.extension",
        "path": "AuditEvent.entity.detail.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.detail.modifierExtension",
        "path": "AuditEvent.entity.detail.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "BackboneElement.modifierExtension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isModifier": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.detail.type",
        "path": "AuditEvent.entity.detail.type",
        "short": "Name of the property",
        "definition": "The type of extra detail provided in the value.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.detail.type",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": ".code"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectDetail.type"
          },
          {
            "identity": "w5",
            "map": "context"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.detail.value",
        "path": "AuditEvent.entity.detail.value",
        "short": "Property value",
        "definition": "The details, base64 encoded. Used to carry bulk information.",
        "comment": "The value is base64 encoded to enable various encodings or binary content.",
        "requirements": "Should not duplicate the entity value unless absolutely necessary.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.detail.value",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "base64Binary"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": ".value"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectDetail.value"
          },
          {
            "identity": "w5",
            "map": "context"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource",
        "path": "AuditEvent.entity",
        "sliceName": "Resource",
        "short": "Resource (HCP, Group, Representative of Patient)",
        "definition": "Specific instances of data or objects that have been accessed.",
        "comment": "Required unless the values for event identification, agent identification, and audit source identification are sufficient to document the entire auditable event. Because events may have more than one entity, this group can be a repeating set of values.",
        "requirements": "The event may have other entities involved.",
        "alias": [
          "ParticipantObject"
        ],
        "min": 0,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "BackboneElement"
          }
        ],
        "constraint": [
          {
            "key": "ele-1",
            "severity": "error",
            "human": "All FHIR elements must have a @value or children",
            "expression": "hasValue() | (children().count() > id.count())",
            "xpath": "@value|f:*|h:div",
            "source": "Element"
          },
          {
            "key": "sev-1",
            "severity": "error",
            "human": "Either a name or a query (NOT both)",
            "expression": "name.empty() or query.empty()",
            "xpath": "not(exists(f:name)) or not(exists(f:query))",
            "source": "AuditEvent.entity"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": ".outboundRelationship[typeCode=SUBJ].target  or  .participation[typeCode=SBJ].role"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectIdentification"
          },
          {
            "identity": "w3c.prov",
            "map": "Entity"
          },
          {
            "identity": "fhirprovenance",
            "map": "Provenance.target, Provenance.entity"
          },
          {
            "identity": "w5",
            "map": "what"
          },
          {
            "identity": "ch-atc",
            "map": "Resource"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.id",
        "path": "AuditEvent.entity.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.extension",
        "path": "AuditEvent.entity.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.modifierExtension",
        "path": "AuditEvent.entity.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "BackboneElement.modifierExtension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isModifier": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.identifier",
        "path": "AuditEvent.entity.identifier",
        "short": "Identifier. HCP (GLN), Group (OID)",
        "definition": "Identifier. HCP (GLN), Group (OID)",
        "comment": "Identifier detail depends on entity type.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.identifier",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Identifier"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": ".id.extension"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectID and ParticipantObjectIDTypeCode"
          },
          {
            "identity": "w5",
            "map": "what"
          },
          {
            "identity": "ch-atc",
            "map": "identifier: GLN for HCP, OID for Group"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.reference",
        "path": "AuditEvent.entity.reference",
        "short": "Specific instance of resource",
        "definition": "Identifies a specific instance of the entity. The reference should be version specific.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.reference",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Reference",
            "targetProfile": "http://hl7.org/fhir/StructureDefinition/Resource"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "[self]"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectID"
          },
          {
            "identity": "fhirprovenance",
            "map": "Provenance.target, Provenance.entity.reference"
          },
          {
            "identity": "w5",
            "map": "what"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.type",
        "path": "AuditEvent.entity.type",
        "short": "Type of entity involved",
        "definition": "The type of the object that was involved in this audit event.",
        "comment": "This value is distinct from the user's role or any user relationship to the entity.",
        "requirements": "To describe the object being acted upon. In addition to queries on the subject of the        action in an auditable event, it is also important to be able to query on the object type        for the action.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.type",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Coding"
          }
        ],
        "isSummary": true,
        "binding": {
          "extension": [
            {
              "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
              "valueString": "AuditEventEntityType"
            }
          ],
          "strength": "extensible",
          "description": "Code for the entity type involved in the audit event",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/audit-entity-type"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": "[self::Act].code or role.player.code"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectTypeCode"
          },
          {
            "identity": "w3c.prov",
            "map": "Entity.type"
          },
          {
            "identity": "fhirprovenance",
            "map": "Provenance.entity.type"
          },
          {
            "identity": "w5",
            "map": "what"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.type.id",
        "path": "AuditEvent.entity.type.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.type.extension",
        "path": "AuditEvent.entity.type.extension",
        "slicing": {
          "discriminator": [
            {
              "type": "value",
              "path": "url"
            }
          ],
          "description": "Extensions are always sliced by (at least) url",
          "rules": "open"
        },
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.type.system",
        "path": "AuditEvent.entity.type.system",
        "short": "Identity of the terminology system",
        "definition": "The identification of the code system that defines the meaning of the symbol in the code.",
        "comment": "The URI may be an OID (urn:oid:...) or a UUID (urn:uuid:...).  OIDs and UUIDs SHALL be references to the HL7 OID registry. Otherwise, the URI should come from HL7's list of FHIR defined special URIs or it should de-reference to some definition that establish the system clearly and unambiguously.",
        "requirements": "Need to be unambiguous about the source of the definition of the symbol.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Coding.system",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "uri"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "C*E.3"
          },
          {
            "identity": "rim",
            "map": "./codeSystem"
          },
          {
            "identity": "orim",
            "map": "fhir:Coding.system rdfs:subPropertyOf dt:CDCoding.codeSystem"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.type.version",
        "path": "AuditEvent.entity.type.version",
        "short": "Version of the system - if relevant",
        "definition": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured. and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.",
        "comment": "Where the terminology does not clearly define what string should be used to identify code system versions, the recommendation is to use the date (expressed in FHIR date format) on which that version was officially published as the version date.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Coding.version",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "C*E.7"
          },
          {
            "identity": "rim",
            "map": "./codeSystemVersion"
          },
          {
            "identity": "orim",
            "map": "fhir:Coding.version rdfs:subPropertyOf dt:CDCoding.codeSystemVersion"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.type.code",
        "path": "AuditEvent.entity.type.code",
        "short": "Symbol in syntax defined by the system",
        "definition": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
        "requirements": "Need to refer to a particular code in the system.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Coding.code",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "fixedCode": "2",
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "C*E.1"
          },
          {
            "identity": "rim",
            "map": "./code"
          },
          {
            "identity": "orim",
            "map": "fhir:Coding.code rdfs:subPropertyOf dt:CDCoding.code"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.type.display",
        "extension": [
          {
            "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-translatable",
            "valueBoolean": true
          }
        ],
        "path": "AuditEvent.entity.type.display",
        "short": "Representation defined by the system",
        "definition": "A representation of the meaning of the code in the system, following the rules of the system.",
        "requirements": "Need to be able to carry a human-readable meaning of the code for readers that do not know  the system.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Coding.display",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "C*E.2 - but note this is not well followed"
          },
          {
            "identity": "rim",
            "map": "CV.displayName"
          },
          {
            "identity": "orim",
            "map": "fhir:Coding.display rdfs:subPropertyOf dt:CDCoding.displayName"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.type.userSelected",
        "path": "AuditEvent.entity.type.userSelected",
        "short": "If this coding was chosen directly by the user",
        "definition": "Indicates that this coding was chosen by a user directly - i.e. off a pick list of available items (codes or displays).",
        "comment": "Amongst a set of alternatives, a directly chosen code is the most appropriate starting point for new translations. There is some ambiguity about what exactly 'directly chosen' implies, and trading partner agreement may be needed to clarify the use of this element and its consequences more completely.",
        "requirements": "This has been identified as a clinical safety criterium - that this exact system/code pair was chosen explicitly, rather than inferred by the system based on some rules or language processing.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Coding.userSelected",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "boolean"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "v2",
            "map": "Sometimes implied by being first"
          },
          {
            "identity": "rim",
            "map": "CD.codingRationale"
          },
          {
            "identity": "orim",
            "map": "fhir:Coding.userSelected fhir:mapsTo dt:CDCoding.codingRationale. fhir:Coding.userSelected fhir:hasMap fhir:Coding.userSelected.map. fhir:Coding.userSelected.map a fhir:Map;   fhir:target dt:CDCoding.codingRationale. fhir:Coding.userSelected\\#true a [     fhir:source \"true\";     fhir:target dt:CDCoding.codingRationale\\#O   ]"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.role",
        "path": "AuditEvent.entity.role",
        "short": "What role the entity played",
        "definition": "Code representing the role the entity played in the event being audited.",
        "requirements": "For some detailed audit analysis it may be necessary to indicate a more granular type        of entity, based on the application role it serves.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.role",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Coding"
          }
        ],
        "isSummary": true,
        "binding": {
          "extension": [
            {
              "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
              "valueString": "ConditionKind"
            }
          ],
          "strength": "required",
          "description": "EprParticipant",
          "valueSetReference": {
            "reference": "http://fhir.ch/ig/ch-atc/ValueSet/EprParticipant"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": "role.code (not sure what this would mean for an Act)"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectTypeCodeRole"
          },
          {
            "identity": "w3c.prov",
            "map": "Entity.role"
          },
          {
            "identity": "w5",
            "map": "context"
          },
          {
            "identity": "ch-atc",
            "map": "role (HCP, REP, GRP)"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.lifecycle",
        "path": "AuditEvent.entity.lifecycle",
        "short": "Life-cycle stage for the entity",
        "definition": "Identifier for the data life-cycle stage for the entity.",
        "comment": "This can be used to provide an audit trail for data, over time, as it passes through the system.",
        "requirements": "Institutional policies for privacy and security may optionally fall under different accountability rules based on data life cycle. This provides a differentiating value for those cases.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.lifecycle",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Coding"
          }
        ],
        "binding": {
          "extension": [
            {
              "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
              "valueString": "AuditEventEntityLifecycle"
            }
          ],
          "strength": "extensible",
          "description": "Identifier for the data life-cycle stage for the entity",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/object-lifecycle-events"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": "target of ObservationEvent[code=\"lifecycle\"].value"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectDataLifeCycle"
          },
          {
            "identity": "w3c.prov",
            "map": "Entity.role"
          },
          {
            "identity": "fhirprovenance",
            "map": "Provenance.entity.role"
          },
          {
            "identity": "w5",
            "map": "context"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.securityLabel",
        "path": "AuditEvent.entity.securityLabel",
        "short": "Security labels on the entity",
        "definition": "Security labels for the identified entity.",
        "comment": "Copied from entity meta security tags.",
        "requirements": "This field identifies the security labels for a specific instance of an object, such as a patient, to detect/track privacy and security issues.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "AuditEvent.entity.securityLabel",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Coding"
          }
        ],
        "binding": {
          "extension": [
            {
              "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
              "valueString": "SecurityLabels"
            },
            {
              "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
              "valueBoolean": true
            }
          ],
          "strength": "extensible",
          "description": "Security Labels from the Healthcare Privacy and Security Classification System.",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/security-labels"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": ".confidentialityCode"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectSensitivity"
          },
          {
            "identity": "w5",
            "map": "context"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.name",
        "path": "AuditEvent.entity.name",
        "short": "Descriptor for entity",
        "definition": "A name of the entity in the audit event.",
        "comment": "This field may be used in a query/report to identify audit events for a specific person.         For example, where multiple synonymous entity identifiers (patient number, medical record        number, encounter number, etc.) have been used.",
        "requirements": "Use only where entity can't be identified with an identifier.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.name",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "condition": [
          "sev-1"
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": ".title"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectName"
          },
          {
            "identity": "w3c.prov",
            "map": "Entity.Label"
          },
          {
            "identity": "w5",
            "map": "context"
          },
          {
            "identity": "ch-atc",
            "map": "Name of HCP, Group or Representative of Patient"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.description",
        "path": "AuditEvent.entity.description",
        "short": "Descriptive text",
        "definition": "Text that describes the entity in more detail.",
        "requirements": "Use only where entity can't be identified with an identifier.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.description",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": ".text"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectDescription"
          },
          {
            "identity": "w5",
            "map": "context"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.query",
        "path": "AuditEvent.entity.query",
        "short": "Query parameters",
        "definition": "The query parameters for a query-type entities.",
        "requirements": "For query events, it may be necessary to capture the actual query input to the query process in order to identify the specific event. Because of differences among query implementations and data encoding for them, this is a base 64 encoded data blob. It may be subsequently decoded or interpreted by downstream audit analysis processing.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.query",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "base64Binary"
          }
        ],
        "condition": [
          "sev-1"
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "No mapping"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectQuery"
          },
          {
            "identity": "w5",
            "map": "context"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.detail",
        "path": "AuditEvent.entity.detail",
        "slicing": {
          "discriminator": [
            {
              "type": "value",
              "path": "type"
            }
          ],
          "rules": "open"
        },
        "short": "Additional Information about the entity",
        "definition": "Tagged value pairs for conveying additional information about the entity.",
        "requirements": "Implementation-defined data about specific details of the object accessed or used.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "AuditEvent.entity.detail",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "BackboneElement"
          }
        ],
        "constraint": [
          {
            "key": "ele-1",
            "severity": "error",
            "human": "All FHIR elements must have a @value or children",
            "expression": "hasValue() | (children().count() > id.count())",
            "xpath": "@value|f:*|h:div",
            "source": "Element"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": ".inboundRelationship[typeCode=SUBJ].target[classCode=OBS, moodCode=EVN]"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectDetail"
          },
          {
            "identity": "w5",
            "map": "context"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.detail.id",
        "path": "AuditEvent.entity.detail.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.detail.extension",
        "path": "AuditEvent.entity.detail.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.detail.modifierExtension",
        "path": "AuditEvent.entity.detail.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "BackboneElement.modifierExtension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isModifier": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.detail.type",
        "path": "AuditEvent.entity.detail.type",
        "short": "Name of the property",
        "definition": "The type of extra detail provided in the value.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.detail.type",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": ".code"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectDetail.type"
          },
          {
            "identity": "w5",
            "map": "context"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.detail.value",
        "path": "AuditEvent.entity.detail.value",
        "short": "Property value",
        "definition": "The details, base64 encoded. Used to carry bulk information.",
        "comment": "The value is base64 encoded to enable various encodings or binary content.",
        "requirements": "Should not duplicate the entity value unless absolutely necessary.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.detail.value",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "base64Binary"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": ".value"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectDetail.value"
          },
          {
            "identity": "w5",
            "map": "context"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.detail:AccessLevel",
        "path": "AuditEvent.entity.detail",
        "sliceName": "AccessLevel",
        "short": "AccessLevel if subtype is Create or Update",
        "definition": "The type of extra detail provided in the value.",
        "requirements": "Implementation-defined data about specific details of the object accessed or used.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.detail",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "BackboneElement"
          }
        ],
        "constraint": [
          {
            "key": "ele-1",
            "severity": "error",
            "human": "All FHIR elements must have a @value or children",
            "expression": "hasValue() | (children().count() > id.count())",
            "xpath": "@value|f:*|h:div",
            "source": "Element"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": ".inboundRelationship[typeCode=SUBJ].target[classCode=OBS, moodCode=EVN]"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectDetail"
          },
          {
            "identity": "w5",
            "map": "context"
          },
          {
            "identity": "ch-atc",
            "map": "AccessLevel"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.detail:AccessLevel.id",
        "path": "AuditEvent.entity.detail.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.detail:AccessLevel.extension",
        "path": "AuditEvent.entity.detail.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.detail:AccessLevel.modifierExtension",
        "path": "AuditEvent.entity.detail.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "BackboneElement.modifierExtension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isModifier": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.detail:AccessLevel.type",
        "path": "AuditEvent.entity.detail.type",
        "short": "The type of extra detail provided in the value.",
        "definition": "The type of extra detail provided in the value.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.detail.type",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "fixedCode": "AccessLevel",
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": ".code"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectDetail.type"
          },
          {
            "identity": "w5",
            "map": "context"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.detail:AccessLevel.value",
        "path": "AuditEvent.entity.detail.value",
        "short": "one of urn:e-health-suisse:2015:policies:access-level: normal,restricted,delegation-and-restricted,delegation-and-normal or full",
        "definition": "The details, base64 encoded. Used to carry bulk information.",
        "comment": "The value is base64 encoded to enable various encodings or binary content.",
        "requirements": "Should not duplicate the entity value unless absolutely necessary.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.detail.value",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "base64Binary"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": ".value"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectDetail.value"
          },
          {
            "identity": "w5",
            "map": "context"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.detail:AccessLimitedToDate",
        "path": "AuditEvent.entity.detail",
        "sliceName": "AccessLimitedToDate",
        "short": "AccessLimitedToDate if subtype is Create or Update",
        "definition": "Tagged value pairs for conveying additional information about the entity.",
        "requirements": "Implementation-defined data about specific details of the object accessed or used.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.detail",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "BackboneElement"
          }
        ],
        "constraint": [
          {
            "key": "ele-1",
            "severity": "error",
            "human": "All FHIR elements must have a @value or children",
            "expression": "hasValue() | (children().count() > id.count())",
            "xpath": "@value|f:*|h:div",
            "source": "Element"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": ".inboundRelationship[typeCode=SUBJ].target[classCode=OBS, moodCode=EVN]"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectDetail"
          },
          {
            "identity": "w5",
            "map": "context"
          },
          {
            "identity": "ch-atc",
            "map": "AccessLimitedToDate"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.detail:AccessLimitedToDate.id",
        "path": "AuditEvent.entity.detail.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.detail:AccessLimitedToDate.extension",
        "path": "AuditEvent.entity.detail.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.detail:AccessLimitedToDate.modifierExtension",
        "path": "AuditEvent.entity.detail.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "BackboneElement.modifierExtension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isModifier": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.detail:AccessLimitedToDate.type",
        "path": "AuditEvent.entity.detail.type",
        "short": "Name of the property",
        "definition": "The type of extra detail provided in the value.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.detail.type",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "fixedCode": "AccessLimitedToDate",
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": ".code"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectDetail.type"
          },
          {
            "identity": "w5",
            "map": "context"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.detail:AccessLimitedToDate.value",
        "path": "AuditEvent.entity.detail.value",
        "short": "date in Property value",
        "definition": "The details, base64 encoded. Used to carry bulk information.",
        "comment": "The value is base64 encoded to enable various encodings or binary content.",
        "requirements": "Should not duplicate the entity value unless absolutely necessary.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.detail.value",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "base64Binary"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": ".value"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectDetail.value"
          },
          {
            "identity": "w5",
            "map": "context"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.detail:ProvideLevel",
        "path": "AuditEvent.entity.detail",
        "sliceName": "ProvideLevel",
        "short": "ProvideLevel if subtype is ATC_POL_DEF_CONFLEVEL",
        "definition": "Tagged value pairs for conveying additional information about the entity.",
        "requirements": "Implementation-defined data about specific details of the object accessed or used.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.detail",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "BackboneElement"
          }
        ],
        "constraint": [
          {
            "key": "ele-1",
            "severity": "error",
            "human": "All FHIR elements must have a @value or children",
            "expression": "hasValue() | (children().count() > id.count())",
            "xpath": "@value|f:*|h:div",
            "source": "Element"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": ".inboundRelationship[typeCode=SUBJ].target[classCode=OBS, moodCode=EVN]"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectDetail"
          },
          {
            "identity": "w5",
            "map": "context"
          },
          {
            "identity": "ch-atc",
            "map": "ProvideLevel"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.detail:ProvideLevel.id",
        "path": "AuditEvent.entity.detail.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.detail:ProvideLevel.extension",
        "path": "AuditEvent.entity.detail.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.detail:ProvideLevel.modifierExtension",
        "path": "AuditEvent.entity.detail.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "BackboneElement.modifierExtension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isModifier": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.detail:ProvideLevel.type",
        "path": "AuditEvent.entity.detail.type",
        "short": "Name of the property",
        "definition": "The type of extra detail provided in the value.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.detail.type",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "fixedCode": "ProvideLevel",
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": ".code"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectDetail.type"
          },
          {
            "identity": "w5",
            "map": "context"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.detail:ProvideLevel.value",
        "path": "AuditEvent.entity.detail.value",
        "short": "one of urn:e-health-suisse:2015:policies:provide-level: normal, restricted or secret",
        "definition": "The details, base64 encoded. Used to carry bulk information.",
        "comment": "The value is base64 encoded to enable various encodings or binary content.",
        "requirements": "Should not duplicate the entity value unless absolutely necessary.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "AuditEvent.entity.detail.value",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "base64Binary"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": ".value"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectDetail.value"
          },
          {
            "identity": "w5",
            "map": "context"
          }
        ]
      }
    ]
  },
  "differential": {
    "element": [
      {
        "id": "AuditEvent",
        "path": "AuditEvent",
        "short": "Policy Audit Trail Content Profile",
        "definition": "Policy Audit Trail Content Profil",
        "comment": "Based on ATNA (RFC 3881).",
        "min": 0,
        "max": "*",
        "constraint": [
          {
            "key": "ch-atc-pae-1",
            "severity": "error",
            "human": "subtype needs to be fixed to ValueSet PolicyAuditEventType",
            "expression": "subtype.exists() and subtype.count()=1 and subtype[0].code.startsWith('ATC_POL')"
          }
        ],
        "mapping": [
          {
            "identity": "dicom",
            "map": "Message"
          }
        ]
      },
      {
        "id": "AuditEvent.id",
        "path": "AuditEvent.id",
        "short": "Logical id of this artifact",
        "definition": "The logical id of the resource, as used in the URL for the resource. Once assigned, this        value never changes.",
        "comment": "The only time that a resource does not have an id is when it is being submitted to the        server using a create operation.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Resource.id",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "isSummary": true
      },
      {
        "id": "AuditEvent.text",
        "path": "AuditEvent.text",
        "short": "A human-readable narrative that contains the summary of the Audit Event.",
        "definition": "A human-readable narrative that contains the summary of the Audit Event.",
        "alias": [
          "narrative",
          "html",
          "xhtml",
          "display"
        ],
        "min": 1
      },
      {
        "id": "AuditEvent.type",
        "path": "AuditEvent.type",
        "short": "Type/identifier of event",
        "definition": "Identifier for a family of the event.  For example, a menu item, program, rule, policy,        function code, application name or URL. It identifies the performed function.",
        "requirements": "This identifies the performed function. For \"Execute\" Event Action Code audit        records, this identifies the application function performed.",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "Coding"
          }
        ],
        "isSummary": true,
        "binding": {
          "extension": [
            {
              "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
              "valueString": "AuditEventType"
            }
          ],
          "strength": "extensible",
          "description": "Type of event.",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/audit-event-type"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": ".code (type, subtype and action are pre-coordinated or sent as translations)"
          },
          {
            "identity": "dicom",
            "map": "EventId"
          },
          {
            "identity": "w3c.prov",
            "map": "Activity"
          },
          {
            "identity": "w5",
            "map": "what"
          }
        ]
      },
      {
        "id": "AuditEvent.subtype",
        "path": "AuditEvent.subtype",
        "slicing": {
          "discriminator": [
            {
              "type": "value",
              "path": "system"
            }
          ],
          "rules": "open"
        },
        "min": 1,
        "max": "*",
        "type": [
          {
            "code": "Coding"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "dicom",
            "map": "EventTypeCode"
          }
        ]
      },
      {
        "id": "AuditEvent.subtype:PolicyAuditEventType",
        "path": "AuditEvent.subtype",
        "sliceName": "PolicyAuditEventType",
        "short": "PolicyAuditEventType",
        "min": 1,
        "max": "1",
        "isSummary": true,
        "binding": {
          "extension": [
            {
              "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
              "valueString": "ConditionKind"
            }
          ],
          "strength": "required",
          "description": "Policy Audit Event Type",
          "valueSetReference": {
            "reference": "http://fhir.ch/ig/ch-atc/ValueSet/PolicyAuditEventType"
          }
        },
        "mapping": [
          {
            "identity": "ch-atc",
            "map": "Event Type"
          }
        ]
      },
      {
        "id": "AuditEvent.subtype:PolicyAuditEventType.system",
        "path": "AuditEvent.subtype.system",
        "min": 1,
        "fixedCode": "urn:oid:2.16.756.5.30.1.127.3.10.7"
      },
      {
        "id": "AuditEvent.recorded",
        "path": "AuditEvent.recorded",
        "short": "Time when the event was recorded",
        "definition": "The time when the event was recorded.",
        "comment": "In a distributed system, some sort of common time base (e.g. an NTP [RFC1305] server)        is a good implementation tactic.",
        "requirements": "This ties an event to a specific date and time. Security audits typically require a consistent        time base (e.g. UTC), to eliminate time-zone issues arising from geographical distribution.",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "instant"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "ch-atc",
            "map": "Event Date and Time"
          }
        ]
      },
      {
        "id": "AuditEvent.agent",
        "path": "AuditEvent.agent",
        "short": "Participants",
        "definition": "Participants",
        "comment": "Several agents may be associated (i.e. have some responsibility for an activity) with        an event or activity.  For example, an activity may be initiated by one user for other users or involve more        than one user. However, only one user may be the initiator/requestor for the activity.",
        "requirements": "An agent can be a person, an organization, software, device, or other actors that may        be ascribed responsibility.",
        "alias": [
          "ActiveParticipant"
        ],
        "min": 1,
        "max": "*",
        "type": [
          {
            "code": "BackboneElement"
          }
        ],
        "mapping": [
          {
            "identity": "dicom",
            "map": "ActiveParticipant"
          },
          {
            "identity": "ch-atc",
            "map": "Participants"
          }
        ]
      },
      {
        "id": "AuditEvent.agent.role",
        "path": "AuditEvent.agent.role",
        "short": "Agent role in the event",
        "definition": "The security role that the user was acting under, that come from local codes defined by        the access control security system (e.g. RBAC, ABAC) used in the local context.",
        "comment": "Should be roles relevant to the event. Should  not be an exhaustive list of roles.",
        "requirements": "This value ties an audited event to a user's role(s). It is an optional value that might be used to group events for analysis by user functional role categories.",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "CodeableConcept"
          }
        ],
        "isSummary": true,
        "binding": {
          "extension": [
            {
              "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
              "valueString": "ConditionKind"
            }
          ],
          "strength": "required",
          "description": "EprParticipant",
          "valueSetReference": {
            "reference": "http://fhir.ch/ig/ch-atc/ValueSet/EprParticipant"
          }
        },
        "mapping": [
          {
            "identity": "dicom",
            "map": "RoleIdCode"
          },
          {
            "identity": "ch-atc",
            "map": "role (PAT, HCP, ASS, REP, GRP, PADM)"
          }
        ]
      },
      {
        "id": "AuditEvent.agent.userId",
        "path": "AuditEvent.agent.userId",
        "short": "Unique identifier for the user",
        "definition": "Unique identifier for the user",
        "comment": "A unique value within the Audit Source ID. For node-based authentication -- where only        the system hardware or process, but not a human user, is identified -- User ID would be        the node name.",
        "requirements": "This field ties an audit event to a specific user.",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "Identifier"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "dicom",
            "map": "UserId"
          },
          {
            "identity": "ch-atc",
            "map": "applicable identifier"
          }
        ]
      },
      {
        "id": "AuditEvent.agent.name",
        "path": "AuditEvent.agent.name",
        "short": "Human-meaningful name for the agent",
        "definition": "AttributeStatement/Attribute[@Name='urn:oasis:names:tc:xspa:1.0:subject:subject- id']/AttributeValue",
        "requirements": "The User ID and Authorization User ID may be internal or otherwise obscure values. This        field assists the auditor in identifying the actual user.",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "dicom",
            "map": "UserName"
          },
          {
            "identity": "ch-atc",
            "map": "Name"
          }
        ]
      },
      {
        "id": "AuditEvent.agent.requestor",
        "path": "AuditEvent.agent.requestor",
        "short": "Whether user is initiator",
        "definition": "Indicator that the participant is the initiator for the event being audited.",
        "comment": "There can only be one initiator. If the initiator is not clear, then do not choose any        one agent as the initiator.",
        "requirements": "This value is used to distinguish between requestor-users and recipient-users. For example,        one person may initiate a report-output to be sent to another user.",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "boolean"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "If participation.typeCode was author, then true"
          },
          {
            "identity": "dicom",
            "map": "UserIsRequestor"
          },
          {
            "identity": "w5",
            "map": "who"
          },
          {
            "identity": "ch-atc",
            "map": "if participant is Initiator"
          }
        ]
      },
      {
        "id": "AuditEvent.entity",
        "path": "AuditEvent.entity",
        "slicing": {
          "discriminator": [
            {
              "type": "value",
              "path": "type.code"
            }
          ],
          "rules": "open"
        },
        "short": "Data or objects used",
        "definition": "Specific instances of data or objects that have been accessed.",
        "comment": "Required unless the values for event identification, agent identification, and audit source        identification are sufficient to document the entire auditable event. Because events may        have more than one entity, this group can be a repeating set of values.",
        "requirements": "The event may have other entities involved.",
        "alias": [
          "ParticipantObject"
        ],
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "BackboneElement"
          }
        ],
        "constraint": [
          {
            "key": "sev-1",
            "severity": "error",
            "human": "Either a name or a query (NOT both)",
            "expression": "name.empty() or query.empty()",
            "xpath": "not(exists(f:name)) or not(exists(f:query))"
          }
        ],
        "mapping": [
          {
            "identity": "w5",
            "map": "FiveWs.what[x]"
          },
          {
            "identity": "rim",
            "map": ".outboundRelationship[typeCode=SUBJ].target  or .participation[typeCode=SBJ].role"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectIdentification"
          },
          {
            "identity": "w3c.prov",
            "map": "Entity"
          },
          {
            "identity": "fhirprovenance",
            "map": "Provenance.target, Provenance.entity"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient",
        "path": "AuditEvent.entity",
        "sliceName": "Patient",
        "short": "Patient",
        "min": 1,
        "max": "1",
        "isSummary": true,
        "mapping": [
          {
            "identity": "ch-atc",
            "map": "Patient"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.identifier",
        "path": "AuditEvent.entity.identifier",
        "short": "Patient Id (EPR-SPID)",
        "definition": "Patient Id (EPR-SPID)",
        "comment": ".",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "Identifier"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "dicom",
            "map": "ParticipantObjectID and ParticipantObjectIDTypeCode"
          },
          {
            "identity": "ch-atc",
            "map": "EPR-SPID"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Patient.identifier.system",
        "path": "AuditEvent.entity.identifier.system",
        "min": 1,
        "fixedUri": "urn:oid:2.16.756.5.30.1.127.3.10.3"
      },
      {
        "id": "AuditEvent.entity:Patient.type",
        "path": "AuditEvent.entity.type",
        "short": "Type of entity involved",
        "definition": "The type of the object that was involved in this audit event.",
        "comment": "This value is distinct from the user's role or any user relationship to the entity.",
        "requirements": "To describe the object being acted upon. In addition to queries on the subject of the        action in an auditable event, it is also important to be able to query on the object type        for the action.",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "Coding"
          }
        ],
        "isSummary": true
      },
      {
        "id": "AuditEvent.entity:Patient.type.code",
        "path": "AuditEvent.entity.type.code",
        "min": 1,
        "fixedCode": "1",
        "isSummary": true
      },
      {
        "id": "AuditEvent.entity:Patient.role",
        "path": "AuditEvent.entity.role",
        "short": "What role the entity played",
        "definition": "Code representing the role the entity played in the event being audited.",
        "requirements": "For some detailed audit analysis it may be necessary to indicate a more granular type        of entity, based on the application role it serves.",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "Coding"
          }
        ],
        "isSummary": true
      },
      {
        "id": "AuditEvent.entity:Patient.role.code",
        "path": "AuditEvent.entity.role.code",
        "min": 1,
        "fixedCode": "1",
        "isSummary": true
      },
      {
        "id": "AuditEvent.entity:Resource",
        "path": "AuditEvent.entity",
        "sliceName": "Resource",
        "short": "Resource (HCP, Group, Representative of Patient)",
        "min": 0,
        "max": "1",
        "isSummary": true,
        "mapping": [
          {
            "identity": "ch-atc",
            "map": "Resource"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.identifier",
        "path": "AuditEvent.entity.identifier",
        "short": "Identifier. HCP (GLN), Group (OID)",
        "definition": "Identifier. HCP (GLN), Group (OID)",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "Identifier"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "ch-atc",
            "map": "identifier: GLN for HCP, OID for Group"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.type",
        "path": "AuditEvent.entity.type",
        "short": "Type of entity involved",
        "definition": "The type of the object that was involved in this audit event.",
        "comment": "This value is distinct from the user's role or any user relationship to the entity.",
        "requirements": "To describe the object being acted upon. In addition to queries on the subject of the        action in an auditable event, it is also important to be able to query on the object type        for the action.",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "Coding"
          }
        ],
        "isSummary": true
      },
      {
        "id": "AuditEvent.entity:Resource.type.code",
        "path": "AuditEvent.entity.type.code",
        "min": 1,
        "fixedCode": "2"
      },
      {
        "id": "AuditEvent.entity:Resource.role",
        "path": "AuditEvent.entity.role",
        "short": "What role the entity played",
        "definition": "Code representing the role the entity played in the event being audited.",
        "requirements": "For some detailed audit analysis it may be necessary to indicate a more granular type        of entity, based on the application role it serves.",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "Coding"
          }
        ],
        "isSummary": true,
        "binding": {
          "extension": [
            {
              "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
              "valueString": "ConditionKind"
            }
          ],
          "strength": "required",
          "description": "EprParticipant",
          "valueSetReference": {
            "reference": "http://fhir.ch/ig/ch-atc/ValueSet/EprParticipant"
          }
        },
        "mapping": [
          {
            "identity": "ch-atc",
            "map": "role (HCP, REP, GRP)"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.name",
        "path": "AuditEvent.entity.name",
        "short": "Descriptor for entity",
        "definition": "A name of the entity in the audit event.",
        "comment": "This field may be used in a query/report to identify audit events for a specific person.         For example, where multiple synonymous entity identifiers (patient number, medical record        number, encounter number, etc.) have been used.",
        "requirements": "Use only where entity can't be identified with an identifier.",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ],
        "condition": [
          "sev-1"
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": ".title"
          },
          {
            "identity": "dicom",
            "map": "ParticipantObjectName"
          },
          {
            "identity": "w3c.prov",
            "map": "Entity.Label"
          },
          {
            "identity": "w5",
            "map": "context"
          },
          {
            "identity": "ch-atc",
            "map": "Name of HCP, Group or Representative of Patient"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.detail",
        "path": "AuditEvent.entity.detail",
        "slicing": {
          "discriminator": [
            {
              "type": "value",
              "path": "type"
            }
          ],
          "rules": "open"
        },
        "isSummary": true,
        "mapping": [
          {
            "identity": "dicom",
            "map": "ParticipantObjectDetail"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.detail:AccessLevel",
        "path": "AuditEvent.entity.detail",
        "sliceName": "AccessLevel",
        "short": "AccessLevel if subtype is Create or Update",
        "definition": "The type of extra detail provided in the value.",
        "min": 0,
        "max": "1",
        "isSummary": true,
        "mapping": [
          {
            "identity": "ch-atc",
            "map": "AccessLevel"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.detail:AccessLevel.type",
        "path": "AuditEvent.entity.detail.type",
        "short": "The type of extra detail provided in the value.",
        "definition": "The type of extra detail provided in the value.",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ],
        "fixedCode": "AccessLevel",
        "isSummary": true
      },
      {
        "id": "AuditEvent.entity:Resource.detail:AccessLevel.value",
        "path": "AuditEvent.entity.detail.value",
        "short": "one of urn:e-health-suisse:2015:policies:access-level: normal,restricted,delegation-and-restricted,delegation-and-normal or full",
        "definition": "The details, base64 encoded. Used to carry bulk information.",
        "comment": "The value is base64 encoded to enable various encodings or binary content.",
        "requirements": "Should not duplicate the entity value unless absolutely necessary.",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "base64Binary"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "dicom",
            "map": "ParticipantObjectDetail.value"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.detail:AccessLimitedToDate",
        "path": "AuditEvent.entity.detail",
        "sliceName": "AccessLimitedToDate",
        "short": "AccessLimitedToDate if subtype is Create or Update",
        "min": 0,
        "max": "1",
        "isSummary": true,
        "mapping": [
          {
            "identity": "ch-atc",
            "map": "AccessLimitedToDate"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.detail:AccessLimitedToDate.type",
        "path": "AuditEvent.entity.detail.type",
        "short": "Name of the property",
        "definition": "The type of extra detail provided in the value.",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ],
        "fixedCode": "AccessLimitedToDate",
        "isSummary": true
      },
      {
        "id": "AuditEvent.entity:Resource.detail:AccessLimitedToDate.value",
        "path": "AuditEvent.entity.detail.value",
        "short": "date in Property value",
        "definition": "The details, base64 encoded. Used to carry bulk information.",
        "comment": "The value is base64 encoded to enable various encodings or binary content.",
        "requirements": "Should not duplicate the entity value unless absolutely necessary.",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "base64Binary"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "dicom",
            "map": "ParticipantObjectDetail.value"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.detail:ProvideLevel",
        "path": "AuditEvent.entity.detail",
        "sliceName": "ProvideLevel",
        "short": "ProvideLevel if subtype is ATC_POL_DEF_CONFLEVEL",
        "min": 0,
        "max": "1",
        "isSummary": true,
        "mapping": [
          {
            "identity": "ch-atc",
            "map": "ProvideLevel"
          }
        ]
      },
      {
        "id": "AuditEvent.entity:Resource.detail:ProvideLevel.type",
        "path": "AuditEvent.entity.detail.type",
        "short": "Name of the property",
        "definition": "The type of extra detail provided in the value.",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ],
        "fixedCode": "ProvideLevel",
        "isSummary": true
      },
      {
        "id": "AuditEvent.entity:Resource.detail:ProvideLevel.value",
        "path": "AuditEvent.entity.detail.value",
        "short": "one of urn:e-health-suisse:2015:policies:provide-level: normal, restricted or secret",
        "definition": "The details, base64 encoded. Used to carry bulk information.",
        "comment": "The value is base64 encoded to enable various encodings or binary content.",
        "requirements": "Should not duplicate the entity value unless absolutely necessary.",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "base64Binary"
          }
        ],
        "isSummary": true,
        "mapping": [
          {
            "identity": "dicom",
            "map": "ParticipantObjectDetail.value"
          }
        ]
      }
    ]
  }
}